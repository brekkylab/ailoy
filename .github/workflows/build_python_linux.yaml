name: Python Linux Build

on:
  workflow_dispatch:

jobs:
  build:
    name: Build for Python ${{ matrix.python }}
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/brekkylab/ailoy-buildpack-linux:20251031

    strategy:
      matrix:
        python: ["cp310-cp310", "cp311-cp311", "cp312-cp312", "cp313-cp313", "cp314-cp314"]

    continue-on-error: true

    env:
      PYTHON_BIN: /opt/python/${{ matrix.python }}/bin

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install cxxbridge (required to build shim)
        run: |
          cargo install cxxbridge-cmd

      - name: Install clang-libs (required by onig-sys)
        run: |
          dnf install clang-libs

      - name: Install maturin
        working-directory: bindings/python
        run: |
          # maturin does not work outside virtualenv, so prepare one
          $PYTHON_BIN/python -m venv .venv
          source .venv/bin/activate
          pip install maturin

      - name: Build wheel
        working-directory: bindings/python
        run: |
          source .venv/bin/activate
          maturin build --out ./dist
        env:
          CMAKE_PREFIX_PATH: /opt/openblas
          OPENSSL_DIR: /opt/openssl
          VULKAN_SDK: /opt/vulkan-sdk
          LD_LIBRARY_PATH: /opt/openblas/lib:/opt/vulkan-sdk/lib

      - name: Repair wheel
        working-directory: bindings/python
        run: |
          mkdir -p wheelhouse
          auditwheel repair dist/*.whl -w wheelhouse \
            --plat manylinux_2_28_x86_64 \
            --exclude libvulkan.so.*
          auditwheel show wheelhouse/*.whl
          WHEEL_NAME=$(basename wheelhouse/*.whl)
          echo "WHEEL_FILENAME=$WHEEL_NAME" >> $GITHUB_ENV

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.WHEEL_FILENAME }}
          path: bindings/python/wheelhouse

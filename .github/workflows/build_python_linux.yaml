name: Python Linux Build

on:
  push:

jobs:
  build:
    name: Build for Python ${{ matrix.python }}
    runs-on: ubuntu-latest

    container:
      image: quay.io/pypa/manylinux_2_28_x86_64

    strategy:
      matrix:
        python: ["cp310-cp310", "cp311-cp311", "cp312-cp312", "cp313-cp313"]

    env:
      PYTHON_BIN: /opt/python/${{ matrix.python }}/bin

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Python build dependencies
        run: |
          $PYTHON_BIN/pip install -U pip
          $PYTHON_BIN/pip install build scikit-build-core

      - name: Install OpenSSL 3.0.16
        run: |
          yum install -y perl-IPC-Cmd
          curl -LO https://www.openssl.org/source/openssl-3.0.16.tar.gz
          tar -xzf openssl-3.0.16.tar.gz
          cd openssl-3.0.16
          ./config --prefix=/opt/openssl --openssldir=/opt/openssl no-shared
          make -j$(nproc)
          make install_sw

      - name: Install Rust (cargo)
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain stable
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Build and Install OpenBLAS
        run: |
          yum install -y gcc-gfortran
          curl -LO https://github.com/OpenMathLib/OpenBLAS/releases/download/v0.3.29/OpenBLAS-0.3.29.tar.gz
          tar -xzf OpenBLAS-0.3.29.tar.gz
          cd OpenBLAS-0.3.29
          make -j$(nproc) NO_SHARED=1 USE_OPENMP=0
          make PREFIX=/opt/openblas NO_SHARED=1 USE_OPENMP=0 install

      - name: Install Vulkan SDK
        run: |
          curl -LO https://sdk.lunarg.com/sdk/download/latest/linux/vulkan-sdk.tar.xz
          mkdir -p /opt/vulkan-sdk
          tar -xJf vulkan-sdk.tar.xz --strip-components=2 -C /opt/vulkan-sdk

      - name: Build wheel
        working-directory: bindings/python
        run: |
          $PYTHON_BIN/python -m build --wheel --outdir /tmp/dist
        env:
          OPENSSL_ROOT_DIR: /opt/openssl
          VULKAN_SDK: /opt/vulkan-sdk/x86_64
          LD_LIBRARY_PATH: /opt/openssl/lib:/opt/vulkan-sdk/x86_64/lib

      - name: Repair wheel
        run: |
          mkdir -p /tmp/wheelhouse
          auditwheel repair /tmp/dist/*.whl --plat manylinux_2_28_x86_64 -w /tmp/wheelhouse
          auditwheel show /tmp/wheelhouse/*.whl
          WHEEL_NAME=$(basename dist/*.whl)
          echo "WHEEL_FILENAME=$WHEEL_NAME" >> $GITHUB_ENV

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.WHEEL_FILENAME }}
          path: ${{ github.workspace }}/bindings/python/wheelhouse/${{ env.WHEEL_FILENAME }}

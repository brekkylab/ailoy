name: Prebuild Linux (OpenSSL 3 + GCC 10)

on:
  push:

jobs:
  build-linux:
    runs-on: ubuntu-latest

    container:
      image: debian:10

    steps:
      - name: Install build dependencies
        run: |
          apt-get update && apt-get install -y \
            git curl cmake build-essential pkg-config \
            libomp-dev libblas-dev liblapack-dev \
            wget ca-certificates software-properties-common

      - name: Install GCC 10
        run: |
          echo "deb http://deb.debian.org/debian buster-backports main" >> /etc/apt/sources.list
          apt-get update
          apt-get -t buster-backports install -y gcc-10 g++-10
          update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 \
                               --slave /usr/bin/g++ g++ /usr/bin/g++-10

      - name: Install Rust
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain stable
          echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> $GITHUB_ENV

      - name: Build and install OpenSSL 3.0
        run: |
          curl -LO https://www.openssl.org/source/openssl-3.0.13.tar.gz
          tar -xzf openssl-3.0.13.tar.gz
          cd openssl-3.0.13
          ./config --prefix=/opt/openssl3 --openssldir=/opt/openssl3
          make -j$(nproc)
          make install
          echo "OPENSSL_ROOT_DIR=/opt/openssl3" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/opt/openssl3/lib/pkgconfig" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/opt/openssl3/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build prebuild (C++20, OpenSSL3)
        working-directory: bindings/js-node
        env:
          CC: gcc
          CXX: g++
        run: |
          npm install
          node build-prebuild.js

      - name: Upload Linux prebuild
        uses: actions/upload-artifact@v4
        with:
          name: prebuild-linux-glibc-2.28-openssl3-gcc10
          path: bindings/js-node/prebuilds/*.tar.gz

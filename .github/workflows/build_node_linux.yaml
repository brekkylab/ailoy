name: Node Linux Build

on:
  push:

jobs:
  build-linux:
    runs-on: ubuntu-latest

    container:
      image: quay.io/pypa/manylinux_2_28_x86_64

    strategy:
      matrix:
        node: [20, 22, 24]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Node.js ${{ matrix.node }}
        run: |
          curl -fsSL https://nodejs.org/dist/v${{ matrix.node }}.0.0/node-v${{ matrix.node }}.0.0-linux-x64.tar.xz -o node.tar.xz
          tar -xf node.tar.xz
          echo "$PWD/node-v${{ matrix.node }}.0.0-linux-x64/bin" >> $GITHUB_PATH

      - name: Install OpenSSL 3.0.16
        run: |
          yum install -y perl-IPC-Cmd
          curl -LO https://www.openssl.org/source/openssl-3.0.16.tar.gz
          tar -xzf openssl-3.0.16.tar.gz
          cd openssl-3.0.16
          ./config --prefix=/opt/openssl --openssldir=/opt/openssl no-shared
          make -j$(nproc)
          make install_sw

      - name: Install Rust (cargo)
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain stable
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Build and Install OpenBLAS
        run: |
          yum install -y gcc-gfortran
          curl -LO https://github.com/OpenMathLib/OpenBLAS/releases/download/v0.3.29/OpenBLAS-0.3.29.tar.gz
          tar -xzf OpenBLAS-0.3.29.tar.gz
          cd OpenBLAS-0.3.29
          make -j$(nproc) NO_SHARED=1 USE_OPENMP=0
          make PREFIX=/opt/openblas NO_SHARED=1 USE_OPENMP=0 install
        env:
          MAKEFLAGS: -j$(nproc)

      - name: Install Vulkan SDK 1.4.313.0
        run: |
          curl -LO https://sdk.lunarg.com/sdk/download/1.4.313.0/linux/vulkan-sdk-1.4.313.0.tar.xz
          mkdir -p /opt/vulkan-sdk
          tar -xJf vulkan-sdk-1.4.313.0.tar.xz --strip-components=2 -C /opt/vulkan-sdk

      - name: Create package
        run: |
          npm install
          npm pack
          PACKAGE_NAME=$(ls -1t ailoy-*.tgz | head -n 1)
          echo "PACKAGE_NAME=$PACKAGE_NAME"
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
        working-directory: ${{ github.workspace }}/bindings/js-node
        env:
          OPENSSL_ROOT_DIR: /opt/openssl
          VULKAN_SDK: /opt/vulkan-sdk/x86_64
          CMAKE_PREFIX_PATH: /opt/openblas

      - name: Upload npm package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}.${{ matrix.node }}
          path: ${{ github.workspace }}/bindings/js-node/${{ env.PACKAGE_NAME }}

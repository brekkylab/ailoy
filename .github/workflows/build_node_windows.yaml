name: Prebuild Windows

on:
  push:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Chocolatey dependencies
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          choco install openssl 7zip

      - name: Download and install Intel MKL
        shell: powershell
        run: |
          $mklInstaller = "w_basekit.exe"
          Invoke-WebRequest -Uri "https://registrationcenter-download.intel.com/akdlm/irc_nas/19035/w_BaseKit_p_2024.0.0.49538_offline.exe" -OutFile $mklInstaller
          Start-Process -FilePath ".\$mklInstaller" -ArgumentList "--silent", "--eula", "accept", "--components", "intel.oneapi.lin.mkl.devel", "--install-dir", "C:\Program Files (x86)\Intel\oneAPI" -Wait

      - name: Set MKL environment
        shell: powershell
        run: |
          echo "MKLROOT=C:\Program Files (x86)\Intel\oneAPI\mkl\latest" >> $env:GITHUB_ENV
          echo "C:\Program Files (x86)\Intel\oneAPI\mkl\latest\redist\intel64" >> $env:GITHUB_PATH

      - name: Install Vulkan SDK
        run: |
          curl -LO https://sdk.lunarg.com/sdk/download/latest/windows/vulkan-sdk.exe
          ./vulkan-sdk.exe --accept-licenses --default-answer --confirm-command install --root C:\VulkanSDK

      - name: Set Vulkan SDK environment
        shell: powershell
        run: |
          echo "VULKAN_SDK=C:\VulkanSDK" >> $env:GITHUB_ENV
          echo "PATH=C:\VulkanSDK\Bin;$env:PATH" >> $env:GITHUB_ENV

      - name: Install Node dependencies
        run: npm install
        working-directory: ${{ github.workspace }}/bindings/js-node

      - name: Run prebuild script
        run: npm pack
        working-directory: ${{ github.workspace }}/bindings/js-node

      - name: Test native addon loads
        run: node -e "require('./build/Release/ailoy_addon.node'); console.log('âœ… Loaded')"

      - name: Upload Windows prebuild
        uses: actions/upload-artifact@v4
        with:
          name: prebuild-windows
          path: ${{ github.workspace }}/bindings/js-node/prebuilds/*.tar.gz

include(FetchContent)
include(ExternalProject)
include(GNUInstallDirs)

FetchContent_Declare(
    nlohmann_json
    URL https://github.com/nlohmann/json/releases/download/v3.12.0/json.tar.xz
)
set(JSON_MultipleHeaders OFF)
set(JSON_Install ON)
FetchContent_MakeAvailable(nlohmann_json)

FetchContent_Declare(dlpack URL https://github.com/dmlc/dlpack/archive/refs/tags/v1.0.tar.gz)
set(BUILD_MOCK OFF CACHE BOOL "DLPack disable mock build" FORCE)  # skip building mock in dlpack
FetchContent_MakeAvailable(dlpack)

FetchContent_Declare(stduuid URL https://github.com/mariusbancila/stduuid/archive/refs/tags/v1.2.3.tar.gz)
FetchContent_MakeAvailable(stduuid)

FetchContent_Declare(spdlog URL https://github.com/gabime/spdlog/archive/refs/tags/v1.15.2.tar.gz)
FetchContent_MakeAvailable(spdlog)

if(NOT DEFINED EMSCRIPTEN) 
    FetchContent_Declare(cpptrace URL https://github.com/jeremy-rifkin/cpptrace/archive/refs/tags/v0.7.5.tar.gz)
    FetchContent_MakeAvailable(cpptrace)
endif()

file(GLOB_RECURSE AILOY_CORE_SRCS ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)
add_library(ailoy_core STATIC ${AILOY_CORE_SRCS})
target_include_directories(ailoy_core PUBLIC 
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)
if(NOT DEFINED EMSCRIPTEN)
    target_link_libraries(ailoy_core PRIVATE $<BUILD_INTERFACE:cpptrace::cpptrace>)
endif()
target_link_libraries(ailoy_core PUBLIC nlohmann_json::nlohmann_json)
target_link_libraries(ailoy_core PUBLIC dlpack::dlpack)
target_link_libraries(ailoy_core PRIVATE $<BUILD_INTERFACE:stduuid>)
target_link_libraries(ailoy_core PRIVATE $<BUILD_INTERFACE:spdlog>)
target_link_libraries(ailoy_core PRIVATE $<BUILD_INTERFACE:magic_enum>)

if(AILOY_WITH_TEST)
    add_executable(test_packet ${CMAKE_CURRENT_SOURCE_DIR}/tests/test_packet.cpp)
    add_test(NAME TestPacket COMMAND test_packet)
    target_link_libraries(test_packet PRIVATE ailoy_core GTest::gtest)
    target_link_options(test_packet PRIVATE -fsanitize=undefined -fsanitize=address)

    add_executable(test_inproc_socket ${CMAKE_CURRENT_SOURCE_DIR}/tests/test_inproc_socket.cpp)
    add_test(NAME TestInprocSocket COMMAND test_inproc_socket)
    target_link_libraries(test_inproc_socket PRIVATE ailoy_core GTest::gtest)
    target_link_options(test_inproc_socket PRIVATE -fsanitize=undefined -fsanitize=address)

    add_executable(test_value ${CMAKE_CURRENT_SOURCE_DIR}/tests/test_value.cpp)
    target_link_libraries(test_value ailoy_core GTest::gtest)
    add_test(NAME TestValue COMMAND test_value)
    target_link_options(test_value PRIVATE -fsanitize=undefined -fsanitize=address)
endif()

# install ailoy_core and its public dependencies
install(TARGETS ailoy_core dlpack nlohmann_json
    EXPORT ailoyTargets
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)
install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/
    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
    FILES_MATCHING PATTERN "*.hpp"
)

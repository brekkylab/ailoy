{
    "version": 6,
    "cmakeMinimumRequired": {
        "major": 3,
        "minor": 20
    },
    "configurePresets": [
        {
            "name": "clang-homebrew-debug",
            "description": "[Debug] Clang (LLVM installed with Homebrew)",
            "generator": "Unix Makefiles",
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Darwin"
            },
            "binaryDir": "${sourceDir}/build/${presetName}",
            "installDir": "${sourceDir}/build/${presetName}/install",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "/opt/homebrew/opt/llvm/bin/clang",
                "CMAKE_CXX_COMPILER": "/opt/homebrew/opt/llvm/bin/clang++",
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
            },
            "environment": {
                "PATH": "/opt/homebrew/opt/llvm/bin:$penv{PATH}",
                "LDFLAGS": "-L/opt/homebrew/opt/llvm/lib",
                "CPPFLAGS": "-I/opt/homebrew/opt/llvm/include"
            }
        },
        {
            "name": "clang-homebrew-release",
            "description": "[Release] Clang (LLVM installed with Homebrew)",
            "generator": "Unix Makefiles",
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Darwin"
            },
            "binaryDir": "${sourceDir}/build/${presetName}",
            "installDir": "${sourceDir}/build/${presetName}/install",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "/opt/homebrew/opt/llvm/bin/clang",
                "CMAKE_CXX_COMPILER": "/opt/homebrew/opt/llvm/bin/clang++",
                "CMAKE_BUILD_TYPE": "Release",
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
            },
            "environment": {
                "PATH": "/opt/homebrew/opt/llvm/bin:$penv{PATH}",
                "LDFLAGS": "-L/opt/homebrew/opt/llvm/lib",
                "CPPFLAGS": "-I/opt/homebrew/opt/llvm/include"
            }
        },
        {
            "name": "apple-clang-debug",
            "description": "[Debug] Apple Clang (Xcode)",
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Darwin"
            },
            "generator": "Unix Makefiles",
            "binaryDir": "${sourceDir}/build/${presetName}",
            "installDir": "${sourceDir}/build/${presetName}/install",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "/usr/bin/clang",
                "CMAKE_CXX_COMPILER": "/usr/bin/clang++",
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
            }
        },
        {
            "name": "apple-clang-release",
            "description": "[Release] Apple Clang (Xcode)",
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Darwin"
            },
            "generator": "Unix Makefiles",
            "binaryDir": "${sourceDir}/build/${presetName}",
            "installDir": "${sourceDir}/build/${presetName}/install",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "/usr/bin/clang",
                "CMAKE_CXX_COMPILER": "/usr/bin/clang++",
                "CMAKE_BUILD_TYPE": "Release",
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
            }
        },
        {
            "name": "linux-gcc-debug",
            "description": "[Debug] Linux GCC",
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Linux"
            },
            "generator": "Unix Makefiles",
            "binaryDir": "${sourceDir}/build/${presetName}",
            "installDir": "${sourceDir}/build/${presetName}/install",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "/usr/bin/gcc",
                "CMAKE_CXX_COMPILER": "/usr/bin/g++",
                "CMAKE_BUILD_TYPE": "Debug",
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
            }
        },
        {
            "name": "linux-gcc-release",
            "description": "[Release] Linux GCC",
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Linux"
            },
            "generator": "Unix Makefiles",
            "binaryDir": "${sourceDir}/build/${presetName}",
            "installDir": "${sourceDir}/build/${presetName}/install",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "/usr/bin/gcc",
                "CMAKE_CXX_COMPILER": "/usr/bin/g++",
                "CMAKE_BUILD_TYPE": "Release",
                "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
            }
        },
        {
            "name": "msvc-debug",
            "description": "[Debug] Microsoft Visual C++",
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            },
            "generator": "NMake Makefiles",
            "binaryDir": "${sourceDir}/build/${presetName}",
            "installDir": "${sourceDir}/build/${presetName}/install",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "cl",
                "CMAKE_CXX_COMPILER": "cl",
                "CMAKE_BUILD_TYPE": "Debug"
            }
        },
        {
            "name": "msvc-release",
            "description": "[Release] Microsoft Visual C++",
            "condition": {
                "type": "equals",
                "lhs": "${hostSystemName}",
                "rhs": "Windows"
            },
            "generator": "NMake Makefiles",
            "binaryDir": "${sourceDir}/build/${presetName}",
            "installDir": "${sourceDir}/build/${presetName}/install",
            "cacheVariables": {
                "CMAKE_C_COMPILER": "cl",
                "CMAKE_CXX_COMPILER": "cl",
                "CMAKE_BUILD_TYPE": "Release"
            }
        }
    ]
}

"use strict";(self.webpackChunkailoy_docs=self.webpackChunkailoy_docs||[]).push([[123],{1593:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"concepts/agent","title":"Agent","description":"The Agent is the core building block in Ailoy for developing agentic AI","source":"@site/docs/concepts/agent.mdx","sourceDirName":"concepts","slug":"/concepts/agent","permalink":"/ailoy/docs/concepts/agent","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"documentSidebar","previous":{"title":"Architecture","permalink":"/ailoy/docs/concepts/architecture"},"next":{"title":"Tools","permalink":"/ailoy/docs/concepts/tools"}}');var t=s(4848),a=s(8453);const r={},l="Agent",o={},d=[{value:"Defining Agents",id:"defining-agents",level:2},{value:"System Messages",id:"system-messages",level:3},{value:"Cleaning Up Agents",id:"cleaning-up-agents",level:3},{value:"Agent Models",id:"agent-models",level:2},{value:"Local Models",id:"local-models",level:3},{value:"API Models",id:"api-models",level:3},{value:"Agent Queries",id:"agent-queries",level:2},{value:"Single Prompt",id:"single-prompt",level:3},{value:"Multi-Modal Inputs",id:"multi-modal-inputs",level:3},{value:"Images Inputs",id:"images-inputs",level:4},{value:"Audios",id:"audios",level:4},{value:"Reasoning",id:"reasoning",level:3},{value:"Agent Responses",id:"agent-responses",level:2},{value:"Handling Messages",id:"handling-messages",level:2},{value:"Using Tools",id:"using-tools",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components},{Details:s,TabItem:i,Tabs:r}=n;return s||g("Details",!0),i||g("TabItem",!0),r||g("Tabs",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"agent",children:"Agent"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Agent"})," is the core building block in Ailoy for developing agentic AI\napplications. It serves as the primary interface for interacting with large\nlanguage models (LLMs), allowing users to send queries, receive streamed\nresponses, and integrate multi-modal inputs and external tools seamlessly."]}),"\n",(0,t.jsx)(n.h2,{id:"defining-agents",children:"Defining Agents"}),"\n",(0,t.jsxs)(n.p,{children:["Before you can use an Agent, you must first initialize a ",(0,t.jsx)(n.code,{children:"Runtime"}),", which is\nresponsible for managing low-level execution, model inference, and resource\ncoordination. This setup step is required regardless of whether you're using\nlocal or API-based models."]}),"\n",(0,t.jsxs)(r,{groupId:"code-language",children:[(0,t.jsx)(i,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:"from ailoy import Runtime\n\nrt = Runtime()\n"})})}),(0,t.jsx)(i,{value:"node",label:"JavaScript(Node)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:'import { startRuntime } from "ailoy-node";\n\nconst rt = await startRuntime();\n'})})})]}),"\n",(0,t.jsxs)(n.p,{children:["Once the runtime is initialized, you can create an ",(0,t.jsx)(n.code,{children:"Agent"})," instance by\nspecifying the model you wish to use. In the example below, we instantiate an\nagent using a local model ",(0,t.jsx)(n.code,{children:"Qwen/Qwen3-0.6B"}),". For a comprehensive list of models\nand usage examples, see the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"#agent-models",children:"Agent Models"})})," section."]}),"\n",(0,t.jsxs)(r,{groupId:"code-language",children:[(0,t.jsx)(i,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'from ailoy import Agent, LocalModel\n\nagent = Agent(rt, LocalModel("Qwen/Qwen3-0.6B"))\n'})})}),(0,t.jsx)(i,{value:"node",label:"JavaScript(Node)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:'import { defineAgent, LocalModel } from "ailoy-node";\n\nconst agent = await defineAgent(rt, LocalModel({ id: "Qwen/Qwen3-0.6B" }));\n'})})})]}),"\n",(0,t.jsx)(n.h3,{id:"system-messages",children:"System Messages"}),"\n",(0,t.jsxs)(n.p,{children:["Agents can be initialized with a ",(0,t.jsx)(n.strong,{children:"system message"}),", which acts as an initial\ninstruction to guide the assistant's behavior throughout the session. This\nmessage sets the tone, persona, or rules for the AI's responses."]}),"\n",(0,t.jsxs)(r,{groupId:"code-language",children:[(0,t.jsx)(i,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"{4} showLineNumbers",children:'agent = Agent(\n    rt,\n    LocalModel("Qwen/Qwen3-0.6B"),\n    system_message="You are a friendly chatbot who always responds in the style of a pirate.",\n)\n'})})}),(0,t.jsx)(i,{value:"node",label:"JavaScript(Node)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"{3} showLineNumbers",children:'const agent = await defineAgent(rt, LocalModel({ id: "Qwen/Qwen3-0.6B" }), {\n  systemMessage:\n    "You are a friendly chatbot who always responds in the style of a pirate.",\n});\n'})})})]}),"\n",(0,t.jsx)(n.h3,{id:"cleaning-up-agents",children:"Cleaning Up Agents"}),"\n",(0,t.jsxs)(n.p,{children:["To release the resources used by an agent, you should call ",(0,t.jsx)(n.code,{children:".delete()"})," when the\nagent is no longer needed."]}),"\n",(0,t.jsxs)(r,{groupId:"code-language",children:[(0,t.jsx)(i,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:"agent.delete()\n"})})}),(0,t.jsx)(i,{value:"node",label:"JavaScript(Node)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:"await agent.delete();\n"})})})]}),"\n",(0,t.jsx)(n.p,{children:"In Python, a more robust and idiomatic approach is to use the agent as a context\nmanager. This ensures automatic cleanup when the context exits."}),"\n",(0,t.jsx)(r,{groupId:"code-language",children:(0,t.jsx)(i,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'with Agent(rt, LocalModel("Qwen/Qwen3-0.6B")) as agent:\n    ...\n'})})})}),"\n",(0,t.jsx)(n.h2,{id:"agent-models",children:"Agent Models"}),"\n",(0,t.jsx)(n.p,{children:"The models used by agents can be either local models (running on your machine)\nor API-based models (hosted by external providers like OpenAI, Google, or\nAnthropic). The setup differs slightly depending on the model type."}),"\n",(0,t.jsx)(n.h3,{id:"local-models",children:"Local Models"}),"\n",(0,t.jsx)(n.p,{children:"Local models run entirely on your local machine, offering greater control over\nperformance and privacy. You can define an agent with a local model as shown\nbelow:"}),"\n",(0,t.jsxs)(r,{groupId:"code-language",children:[(0,t.jsx)(i,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'from ailoy import Runtime, Agent, LocalModel\n\nrt = Runtime()\nagent = Agent(rt, LocalModel("Qwen/Qwen3-0.6B"))\n'})})}),(0,t.jsx)(i,{value:"node",label:"JavaScript(Node)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:'import { startRuntime, defineAgent, LocalModel } from "ailoy-node";\n\nconst rt = await startRuntime();\nconst agent = await defineAgent(rt, LocalModel({ id: "Qwen/Qwen3-0.6B" }));\n'})})})]}),"\n",(0,t.jsx)(n.p,{children:"Supported local models include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/Qwen/Qwen3-0.6B",children:"Qwen/Qwen3-0.6B"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/Qwen/Qwen3-1.7B",children:"Qwen/Qwen3-1.7B"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/Qwen/Qwen3-4B",children:"Qwen/Qwen3-4B"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/Qwen/Qwen3-8B",children:"Qwen/Qwen3-8B"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/Qwen/Qwen3-14B",children:"Qwen/Qwen3-14B"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/Qwen/Qwen3-32B",children:"Qwen/Qwen3-32B"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/Qwen/Qwen3-30B-A3B",children:"Qwen/Qwen3-30B-A3B"})}),"\n"]}),"\n","\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Ensure that the model is compatible with your hardware. For system requirements and setup instructions, refer to the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"/ailoy/docs/concepts/devices-environments",children:"Devices & Environments"})})," page."]})}),"\n","\n",(0,t.jsx)(n.h3,{id:"api-models",children:"API Models"}),"\n",(0,t.jsx)(n.p,{children:"API models are accessed via third-party services. You\u2019ll need an API key from\nthe respective provider. Here\u2019s how to define an agent using API models:"}),"\n",(0,t.jsxs)(r,{groupId:"code-language",children:[(0,t.jsx)(i,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'from ailoy import Runtime, Agent, APIModel\n\nrt = Runtime()\n# Use OpenAI\nagent = Agent(rt, APIModel("gpt-4o", api_key="<OPENAI_API_KEY>"))\n# Use Gemini\nagent = Agent(rt, APIModel("gemini-2.5-flash", api_key="<GEMINI_API_KEY>"))\n# Use Claude\nagent = Agent(rt, APIModel("claude-sonnet-4-20250514", api_key="<CLAUDE_API_KEY>"))\n'})})}),(0,t.jsx)(i,{value:"node",label:"JavaScript(Node)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:'import { startRuntime, defineAgent, APIModel } from "ailoy-node";\n\nconst rt = await startRuntime();\n// Use OpenAI\nconst agent = await defineAgent(\n  rt,\n  APIModel({ id: "gpt-4o", apiKey: "<OPENAI_API_KEY>" })\n);\n// Use Gemini\nconst agent = await defineAgent(\n  rt,\n  APIModel({ id: "gemini-2.5-flash", apiKey: "<GEMINI_API_KEY>" })\n);\n// Use Claude\nconst agent = await defineAgent(\n  rt,\n  APIModel({ id: "claude-sonnet-4-20250514", apiKey: "<CLAUDE_API_KEY>" })\n);\n'})})})]}),"\n",(0,t.jsx)(n.p,{children:"Supported API model providers and model IDs:"}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)(n.strong,{children:"OpenAI"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"o4-mini"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"o3"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"o3-pro"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"o3-mini"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"gpt-4o"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"gpt-4o-mini"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"gpt-4.1"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"gpt-4.1-mini"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"gpt-4.1-nano"})}),"\n"]})]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)(n.strong,{children:"Gemini"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"gemini-2.5-flash"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"gemini-2.5-pro"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"gemini-2.0-flash"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"gemini-1.5-flash"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"gemini-1.5-pro"})}),"\n"]})]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)(n.strong,{children:"Claude"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"claude-sonnet-4-20250514"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"claude-3-7-sonnet-20250219"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"claude-3-5-sonnet-20241022"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"claude-3-5-sonnet-20240620"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"claude-opus-4-20250514"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"claude-3-opus-20240229"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"claude-3-5-haiku-20241022"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"claude-3-haiku-20240307"})}),"\n"]})]}),"\n",(0,t.jsxs)(n.p,{children:["To use a model not listed in these presets, you must explicitly set the\n",(0,t.jsx)(n.code,{children:"provider"}),":"]}),"\n",(0,t.jsxs)(r,{groupId:"code-language",children:[(0,t.jsx)(i,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"{5} showLineNumbers",children:'agent = Agent(\n    rt,\n    APIModel(\n        "gpt-4o-audio-preview",\n        provider="openai",\n        api_key="<OPENAI_API_KEY>"\n    )\n)\n'})})}),(0,t.jsx)(i,{value:"node",label:"JavaScript(Node)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"{5} showLineNumbers",children:'const agent = await ai.defineAgent(\n  rt,\n  ai.APIModel({\n    id: "gpt-4o-audio-preview",\n    provider: "openai",\n    apiKey: "<OPENAI_API_KEY>",\n  })\n);\n'})})})]}),"\n",(0,t.jsx)(n.h2,{id:"agent-queries",children:"Agent Queries"}),"\n",(0,t.jsx)(n.p,{children:"Agents can be queried with natural language prompts and optionally with\nmultimodal inputs like images and audio. Responses are streamed in real-time for\nan interactive experience."}),"\n",(0,t.jsx)(n.h3,{id:"single-prompt",children:"Single Prompt"}),"\n",(0,t.jsx)(n.p,{children:"The simplest form is sending a single text string:"}),"\n",(0,t.jsxs)(r,{groupId:"code-language",children:[(0,t.jsx)(i,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'for resp in agent.query("Please give me a short poem about AI"):\n    agent.print(resp)\n'})})}),(0,t.jsx)(i,{value:"node",label:"JavaScript(Node)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:'for await (const resp of agent.query("Please give me a short poem about AI")) {\n  agent.print(resp);\n}\n'})})})]}),"\n",(0,t.jsx)(n.h3,{id:"multi-modal-inputs",children:"Multi-Modal Inputs"}),"\n",(0,t.jsx)(n.p,{children:"Multi-modal queries combine text with images or audio files for richer input."}),"\n",(0,t.jsx)(n.h4,{id:"images-inputs",children:"Images Inputs"}),"\n",(0,t.jsxs)(n.p,{children:["Images can be passed via URLs or loaded directly using libraries like\n",(0,t.jsx)(n.a,{href:"https://pillow.readthedocs.io/en/stable/index.html",children:"Pillow"})," (Python) or\n",(0,t.jsx)(n.a,{href:"https://sharp.pixelplumbing.com/",children:"Sharp"})," (Node.js)."]}),"\n",(0,t.jsxs)(r,{groupId:"code-language",children:[(0,t.jsx)(i,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'from ailoy import ImageContent\n\n# Image from public URL\nfor resp in agent.query([\n    "What is in this image?",\n    ImageContent.from_url("https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg"),\n]):\n    agent.print(resp)\n\n# Image from Pillow\nfrom PIL import Image\n\nimage = Image.open("path/to/image.png")\nfor resp in agent.query([\n    "What is in this image?",\n    # You can provide image as-is, or via ImageContent.from_pillow()\n    image,\n    # ImageContent.from_pillow(image),\n]):\n    agent.print(resp)\n'})})}),(0,t.jsx)(i,{value:"node",label:"JavaScript(Node)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:'import { ImageContent } from "ailoy-node";\nimport sharp from "sharp";\n\n// Image from public URL\nfor await (const resp of agent.query([\n  "What is in this image?",\n  ImageContent.fromUrl(\n    "https://upload.wikimedia.org/wikipedia/commons/thumb/d/dd/Gfp-wisconsin-madison-the-nature-boardwalk.jpg/2560px-Gfp-wisconsin-madison-the-nature-boardwalk.jpg"\n  ),\n])) {\n  agent.print(resp);\n}\n\n// Image from Sharp\nconst image = sharp("path/to/image.png");\nfor await (const resp of agent.query([\n  "What is in this image?",\n  // You can provide image as-is, or via ImageContent.fromSharp()\n  image,\n  // await ImageContent.fromSharp(image),\n])) {\n  agent.print(resp);\n}\n'})})})]}),"\n",(0,t.jsx)(n.h4,{id:"audios",children:"Audios"}),"\n",(0,t.jsx)(n.p,{children:"Audio files can be passed using byte streams with format metadata:"}),"\n",(0,t.jsxs)(r,{groupId:"code-language",children:[(0,t.jsx)(i,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:'from ailoy import AudioContent\n\nwith open("path/to/audio.wav", "rb") as f:\n    data = f.read()\n\nfor resp in agent.query([\n    "What\'s in these recording?",\n    AudioContent.from_bytes(data=data, format="wav"),\n]):\n    agent.print(resp)\n'})})}),(0,t.jsx)(i,{value:"node",label:"JavaScript(Node)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:'import { AudioContent } from "ailoy-node";\nimport fs from "node:fs";\n\nconst buffer = fs.readFileSync("path/to/audio.wav");\nfor await (const resp of agent.query([\n  "What\'s in these recording?",\n  await AudioContent.fromBytes(buffer, "wav"),\n])) {\n  agent.print(resp);\n}\n'})})})]}),"\n","\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["Multi-modal support is available only for ",(0,t.jsx)(n.strong,{children:"API models"}),".\nCapabilities vary by provider:"]}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Model provider"}),(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"Image (base64)"}),(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"Image (public URL)"}),(0,t.jsx)(n.th,{style:{textAlign:"center"},children:"Audio (base64)"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"OpenAI"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Gemini"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"\u274c"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Claude"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"\u274c"}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"\u274c"})]})]})]})]}),"\n","\n",(0,t.jsx)(n.h3,{id:"reasoning",children:"Reasoning"}),"\n",(0,t.jsxs)(n.p,{children:["Some models support ",(0,t.jsx)(n.strong,{children:"step-by-step reasoning"})," for complex tasks. Enable this\nwith the ",(0,t.jsx)(n.code,{children:"reasoning"})," flag:"]}),"\n",(0,t.jsxs)(r,{groupId:"code-language",children:[(0,t.jsx)(i,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"{3} showLineNumbers",children:'for resp in agent.query(\n    "Please solve me a simultaneous equation: x+y=3, 4x+3y=12",\n    reasoning=True\n):\n    agent.print(resp)\n'})})}),(0,t.jsx)(i,{value:"node",label:"JavaScript(Node)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"{3} showLineNumbers",children:'for await (const resp of agent.query(\n  "Please solve me a simultaneous equation: x+y=3, 4x+3y=12",\n  { reasoning: true }\n)) {\n  agent.print(resp);\n}\n'})})})]}),"\n",(0,t.jsx)(n.h2,{id:"agent-responses",children:"Agent Responses"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Agent responses"})," are the streamed output of the agent runs. Since Ailoy is\ndesigned to stream output on-the-fly, each part of the response can be treated\nas a real-time output."]}),"\n",(0,t.jsx)(n.p,{children:"Basically, an agent response has the following structure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'{\n  type: One of ["output_text" | "tool_call" | "tool_call_result" | "reasoning" | "error"]\n  role: One of ["assistant" | "tool"];\n  is_type_switched: boolean\n  content: Depends on type;\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"type"})," field indicates what kind of output the agent is currently\nproducing. Depending on the type, the structure of the response may vary."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"role"})," field specifies who is speaking\u2014either the Assistant (LLM model) or\na Tool."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"is_type_switched"})," flag indicates whether this response is the first\nmessage of a new type. You can use this flag to detect when a new type of\nmessage has arrived and trigger actions in your application, such as creating\na new message box. See our\n",(0,t.jsx)(n.a,{href:"https://github.com/brekkylab/ailoy/tree/main/examples/gradio_chatbot",children:"Gradio chatbot example"}),"\nfor a detailed use case."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Here are the descriptions of each response type:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"output_text"}),": This is the main textual output from the assistant. The\n",(0,t.jsx)(n.code,{children:"content"})," field contains a string with the generated text."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"tool_call"}),": A message indicating that the assistant is requesting a tool to\nbe invoked. Within the agent system, tools automatically receive this call and\nare expected to return a corresponding ",(0,t.jsx)(n.code,{children:"tool_call_result"}),". The ",(0,t.jsx)(n.code,{children:"content"}),"\ncontains a JSON-compatible dictionary describing the tool call."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"tool_call_result"}),": The result returned by the tool in response to a\n",(0,t.jsx)(n.code,{children:"tool_call"}),". The assistant receives this result and uses it to produce a final\nresponse to the user. The ",(0,t.jsx)(n.code,{children:"content"})," contains a JSON-compatible dictionary with\nthe tool's output."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"reasoning"}),": Intermediate reasoning steps produced by a reasoning-enabled\nmodel. The ",(0,t.jsx)(n.code,{children:"content"})," field contains a string with the generated reasoning. If\nthe ",(0,t.jsx)(n.code,{children:"ignore_reasoning_messages"})," flag is enabled, these messages are omitted\nfrom the output."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"error"}),": Indicates that an error has occurred. ",(0,t.jsx)(n.code,{children:"content"})," field contains the\nreason of the error. After error raised, no more responses will be generated."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"handling-messages",children:"Handling Messages"}),"\n",(0,t.jsx)(n.p,{children:"Agent automatically track conversation history. You can access or clear this\ninternal message list as needed."}),"\n",(0,t.jsxs)(r,{groupId:"code-language",children:[(0,t.jsx)(i,{value:"python",label:"Python",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",metastring:"showLineNumbers",children:"# Get the list of messages\nmessages = agent.get_messages()\nprint(messages)\n\n# Clear messages\nagent.clear_messages()\n"})})}),(0,t.jsx)(i,{value:"node",label:"JavaScript(Node)",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:"// Get the list of messages\nconst messages = agent.getMessages();\nconsole.log(messages);\n\n// Clear messages\nagent.clearMessages();\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"using-tools",children:"Using Tools"}),"\n",(0,t.jsxs)(n.p,{children:["Agents can be extended with custom ",(0,t.jsx)(n.strong,{children:"tools"}),", allowing them to perform tasks\nlike database access, API requests, or file manipulation. For more details on\ntool creation and usage, see the ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.a,{href:"./tools",children:"Tools"})})," page"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}function g(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var i=s(6540);const t={},a=i.createContext(t);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);
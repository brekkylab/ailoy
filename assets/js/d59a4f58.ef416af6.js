"use strict";(self.webpackChunkailoy_docs=self.webpackChunkailoy_docs||[]).push([[793],{2641:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>C,contentTitle:()=>M,default:()=>T,frontMatter:()=>I,metadata:()=>o,toc:()=>q});const o=JSON.parse('{"id":"tutorial/using-tools","title":"Using Tools","description":"One of the most powerful features in Ailoy is the tool calling system. It allows","source":"@site/docs/tutorial/using-tools.mdx","sourceDirName":"tutorial","slug":"/tutorial/using-tools","permalink":"/ailoy/docs/tutorial/using-tools","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"documentSidebar","previous":{"title":"Reasoning","permalink":"/ailoy/docs/tutorial/reasoning"},"next":{"title":"Integrate with MCP","permalink":"/ailoy/docs/tutorial/integrate-with-mcp"}}');var r,a,l,s,i,c,d,h,m,u,p,f,g,x,y,w,k,A,j=n(4848),b=n(8453),v=n(6540);function E(){return E=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)({}).hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},E.apply(null,arguments)}const S=({title:e,titleId:t,...n})=>v.createElement("svg",E({xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 431.764 453.295","aria-labelledby":t},n),e?v.createElement("title",{id:t},e):null,r||(r=v.createElement("defs",null,v.createElement("style",null,"@font-face{font-family:Excalifont;src:url(data:font/woff2;base64,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)}"))),a||(a=v.createElement("path",{fill:"#fff",d:"M0 0h431.764v453.295H0z"})),l||(l=v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeLinecap:"round",strokeWidth:2,d:"M206.414 216.193c39.46-1.19 78.69-1.11 163.98 0m-163.98 0c58.1-.63 117.54-1.23 163.98 0m0 0c21.43 1.78 32.22 10.7 32 32m-32-32c20.77 1.91 32.46 11.96 32 32m0 0c-1.74 37.38-.62 72.68 0 158.57m0-158.57c1.43 44.87.03 89.07 0 158.57m0 0c-.22 20.95-9.14 31.6-32 32m32-32c-1.84 20.15-11.49 30.83-32 32m0 0c-46.51.11-95.05-1.51-163.98 0m163.98 0c-41.65-1.03-83.54-1.33-163.98 0m0 0c-22.72-.62-32.09-11.17-32-32m32 32c-19.3-.84-31.97-12.68-32-32m0 0c.99-38.75 2.3-76.53 0-158.57m0 158.57c-.04-59.76-1.27-117.46 0-158.57m0 0c1.88-21.79 11.14-30.38 32-32m-32 32c.07-23.19 10.57-32.93 32-32"})),v.createElement("text",{x:47.57,y:17.62,fill:"#1e1e1e",dominantBaseline:"alphabetic",fontFamily:"Excalifont, Xiaolai, Segoe UI Emoji",fontSize:20,style:{whiteSpace:"pre"},textAnchor:"middle",transform:"translate(240.834 239.977)"},"Assistant"),s||(s=v.createElement("g",{strokeLinecap:"round",mask:"url(#mask-PhhxYykQjHpB7IkTbUxqb)"},v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeWidth:2,d:"M179.191 154.522c3.93 10.18 19.63 49.97 23.6 60.19m-21.59-60.72c3.86 10.31 17.35 51.25 20.93 61.79M186.571 196.212c5.86 6.26 6.95 11.95 15.56 19.57m-15.56-19.57c4.94 5.46 9.73 12.86 15.56 19.57"}),v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeWidth:2,d:"M202.791 190.792c1.47 7.67-1.82 14.83-.66 24.99m.66-24.99c-.24 7.18-.58 16.3-.66 24.99"}))),i||(i=v.createElement("mask",{id:"mask-PhhxYykQjHpB7IkTbUxqb"},v.createElement("path",{fill:"#fff",d:"M0 0h302.239v315.594H0z"}),v.createElement("path",{d:"M180.73 174.563h20.32v20h-20.32z"}))),v.createElement("text",{x:10.16,y:14.096,fill:"#1e1e1e",dominantBaseline:"alphabetic",fontFamily:"Excalifont, Xiaolai, Segoe UI Emoji",fontSize:16,style:{whiteSpace:"pre"},textAnchor:"middle",transform:"translate(180.73 174.563)"},"(1)"),c||(c=v.createElement("g",{strokeLinecap:"round",mask:"url(#mask-1aPS3ZvniQ2-1hBHJ0gh1)"},v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeWidth:2,d:"M111.974 272.791c9.86.02 50.08-.49 60.55-.49m-62.14-.4c10.12.19 53.53 1.28 64.23 1.65M150.884 281.411c9.81-4.99 17.69-4.28 23.73-7.86m-23.73 7.86c6.39-2.37 14.56-5.09 23.73-7.86"}),v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeWidth:2,d:"M151.384 264.321c9.57 1.7 17.26 9.12 23.23 9.23m-23.23-9.23c6.24 2.7 14.27 5.06 23.23 9.23"}))),d||(d=v.createElement("mask",{id:"mask-1aPS3ZvniQ2-1hBHJ0gh1"},v.createElement("path",{fill:"#fff",d:"M0 0h273.699v372.866H0z"}),v.createElement("path",{d:"M130.607 262.683h24.688v20h-24.688z"}))),v.createElement("text",{x:12.344,y:14.096,fill:"#1e1e1e",dominantBaseline:"alphabetic",fontFamily:"Excalifont, Xiaolai, Segoe UI Emoji",fontSize:16,style:{whiteSpace:"pre"},textAnchor:"middle",transform:"translate(130.607 262.683)"},"(2)"),h||(h=v.createElement("g",{strokeLinecap:"round",mask:"url(#mask-Cg0DfCphYW5QckLsaXlRb)"},v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeWidth:2,d:"M314.8 215.91c-.36-10.51-1.35-53.39-1.53-63.73m.22 62.93c-.61-10.33-1.19-51.17-1.24-61.67"}),v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeWidth:2,d:"M321.06 176.84c-2.51-9.07-7.49-17.11-8.81-23.4m8.81 23.4c-2.95-10.15-5.87-18.47-8.81-23.4M303.96 177.03c3.96-9.19 5.44-17.3 8.29-23.59m-8.29 23.59c3.85-10.13 7.74-18.53 8.29-23.59"}))),m||(m=v.createElement("mask",{id:"mask-Cg0DfCphYW5QckLsaXlRb"},v.createElement("path",{fill:"#fff",d:"M0 0h415.58v378.181H0z"}),v.createElement("path",{d:"M302.351 174.069h23.216v20h-23.216z"}))),v.createElement("text",{x:11.608,y:14.096,fill:"#1e1e1e",dominantBaseline:"alphabetic",fontFamily:"Excalifont, Xiaolai, Segoe UI Emoji",fontSize:16,style:{whiteSpace:"pre"},textAnchor:"middle",transform:"translate(302.351 174.07)"},"(3)"),u||(u=v.createElement("g",{strokeLinecap:"round",mask:"url(#mask-nYCriw5kUvPUbAMAFZcw8)"},v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeWidth:2,d:"M347.426 151.867c-.07 10.68.48 53.27.75 63.81m-2.33-64.45c-.3 10.84.97 55.25 1.48 66.08M337.946 194.127c4.94 9.11 7.53 19.42 9.38 23.18m-9.38-23.18c1.71 6.59 4.88 13.24 9.38 23.18"}),v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeWidth:2,d:"M355.036 193.527c-1.55 9.31-5.46 19.85-7.71 23.78m7.71-23.78c-2.82 6.74-4.19 13.56-7.71 23.78"}))),p||(p=v.createElement("mask",{id:"mask-nYCriw5kUvPUbAMAFZcw8"},v.createElement("path",{fill:"#fff",d:"M0 0h448.012v315.495H0z"}),v.createElement("path",{d:"M336.415 173.301h22.848v20h-22.848z"}))),v.createElement("text",{x:11.424,y:14.096,fill:"#1e1e1e",dominantBaseline:"alphabetic",fontFamily:"Excalifont, Xiaolai, Segoe UI Emoji",fontSize:16,style:{whiteSpace:"pre"},textAnchor:"middle",transform:"translate(336.415 173.301)"},"(4)"),f||(f=v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeLinecap:"round",strokeWidth:2,d:"M111.133 10c108.8 2.31 213.74 2.69 278.63 0m-278.63 0c110.35-1.67 220.51-.98 278.63 0m0 0c21.14-1.26 33.1 10.02 32 32m-32-32c19.42-1.99 33.96 9.56 32 32m0 0c.4 27.55-.76 58.87 0 86.95m0-86.95c.24 29.69.72 56.94 0 86.95m0 0c-1.91 20.09-9.74 31.56-32 32m32-32c-.42 20.94-12.77 31.51-32 32m0 0c-60.42 1.01-121.35.94-278.63 0m278.63 0c-95.43-.11-190.55-.75-278.63 0m0 0c-23.23.16-31.14-10.57-32-32m32 32c-20.58 1.5-33.42-8.63-32-32m0 0c.44-31.25-.41-60.65 0-86.95m0 86.95c.73-30.91.54-63.31 0-86.95m0 0c1-21.41 11.12-31.75 32-32m-32 32c2.19-23.27 9.98-34.22 32-32"})),v.createElement("text",{y:14.096,fill:"#1e1e1e",dominantBaseline:"alphabetic",fontFamily:"Excalifont, Xiaolai, Segoe UI Emoji",fontSize:16,style:{whiteSpace:"pre"},transform:"translate(103.01 20.313)"},"Tool"),g||(g=v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeLinecap:"round",strokeWidth:2,d:"M157.755 52.481c10.92-1.85 24.21-1.07 35.46 1.22s23.34 6.98 32.05 12.53c8.7 5.54 16.66 13.29 20.21 20.73 3.54 7.44 3.48 16.34 1.07 23.9-2.42 7.56-7.97 15.49-15.55 21.45s-19.04 11.13-29.95 14.31c-10.91 3.19-23.69 5.3-35.51 4.82s-25.01-3.51-35.4-7.68c-10.39-4.18-20.86-10.72-26.96-17.36-6.09-6.65-8.94-14.75-9.62-22.53-.67-7.78.51-17.1 5.56-24.16 5.04-7.05 12.96-13.44 24.7-18.18 11.74-4.75 36.23-8.88 45.75-10.28 9.52-1.41 11.33.91 11.39 1.85m-27.17-1.8c11.06-1.88 26.24.08 37.84 2.41 11.61 2.32 23.28 6.11 31.8 11.54 8.53 5.42 15.52 13.76 19.33 21.01s5.29 14.85 3.52 22.47c-1.76 7.62-6.99 16.6-14.1 23.24-7.1 6.63-17.41 13.4-28.51 16.57s-26.18 3.16-38.08 2.47-23.23-2.78-33.32-6.61-20.47-9.6-27.25-16.36-12.45-16.36-13.42-24.19c-.96-7.83 2.51-15.93 7.63-22.79 5.12-6.87 13.76-13.69 23.09-18.42 9.34-4.73 27.13-8.16 32.9-9.94 5.78-1.78 1.34-1.64 1.75-.75"})),v.createElement("text",{x:44,y:14.096,fill:"#1e1e1e",dominantBaseline:"alphabetic",fontFamily:"Excalifont, Xiaolai, Segoe UI Emoji",fontSize:16,style:{whiteSpace:"pre"},textAnchor:"middle",transform:"translate(126.564 91.16)"},"Description"),x||(x=v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeLinecap:"round",strokeWidth:2,d:"M358.786 54.92c10.76 2.11 21.03 8.69 28.65 14.7s14.58 13.77 17.07 21.36c2.5 7.58 1.21 16.59-2.1 24.16-3.3 7.57-9.69 15.75-17.74 21.25s-19.48 9.18-30.56 11.75c-11.08 2.56-24.17 4.81-35.91 3.64-11.75-1.16-24.99-6.06-34.56-10.64s-17.6-10.14-22.89-16.84-9.14-15.49-8.84-23.36 4.79-16.98 10.65-23.87 14.69-13.43 24.51-17.47c9.82-4.05 21.2-6.55 34.39-6.77s35.76 3.81 44.75 5.45 9.77 3.76 9.17 4.41m-42.74-10.65c11.43-.32 24.98 3.63 35.16 7.44 10.19 3.81 19.61 9.19 25.94 15.43 6.33 6.23 10.95 14.11 12.04 22 1.1 7.88-.84 17.91-5.46 25.31-4.61 7.4-12.74 14.14-22.24 19.09-9.49 4.95-22.62 9.41-34.71 10.62s-26.24-1.09-37.82-3.37c-11.57-2.28-23.27-5.05-31.63-10.31-8.36-5.27-14.95-13.8-18.52-21.3-3.56-7.5-4.97-16.31-2.87-23.68 2.11-7.37 8.38-14.48 15.53-20.52 7.14-6.05 16.34-12.28 27.36-15.75 11.02-3.46 32.67-4.3 38.76-5.05s-2.06-.21-2.24.56"})),v.createElement("text",{x:37.597,y:15.698,fill:"#1e1e1e",dominantBaseline:"alphabetic",fontFamily:"Excalifont, Xiaolai, Segoe UI Emoji",fontSize:17.818,style:{whiteSpace:"pre"},textAnchor:"middle",transform:"translate(291.169 90.763)"},"Behavior"),y||(y=v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeLinecap:"round",strokeWidth:2,d:"M65.81 226.416c8.17-.09 17.85 2.8 24.59 7.68 6.74 4.87 12.48 13.8 15.86 21.57 3.37 7.78 5.04 16.83 4.38 25.05s-3.58 17.39-8.36 24.27c-4.78 6.89-12.63 13.42-20.33 17.02-7.7 3.61-17.48 5.29-25.89 4.6-8.42-.7-17.9-3.85-24.6-8.77-6.69-4.92-12.07-12.97-15.59-20.76-3.53-7.79-6.29-17.52-5.57-25.97.71-8.44 5.05-18.02 9.87-24.68 4.82-6.67 10.77-11.8 19.05-15.31 8.28-3.52 25.23-5.38 30.64-5.8s1.97 2.35 1.84 3.26m-28.06-1.67c7.04-3.27 18.08-1.93 26.34.02 8.25 1.95 16.49 6.17 23.17 11.68 6.67 5.52 13.99 13.31 16.86 21.39 2.87 8.07 2.26 18.78.37 27.05s-5.92 16.63-11.71 22.57c-5.79 5.93-14.78 10.43-23.02 13.05s-18.23 4.22-26.43 2.66c-8.2-1.55-16.45-6.35-22.74-11.99-6.3-5.64-12.63-14.16-15.03-21.85s-1.43-16.26.61-24.29c2.05-8.04 6.37-17.47 11.65-23.92 5.29-6.45 16.31-12.53 20.08-14.79s2.13.42 2.55 1.23"})),v.createElement("text",{x:21.672,y:14.096,fill:"#1e1e1e",dominantBaseline:"alphabetic",fontFamily:"Excalifont, Xiaolai, Segoe UI Emoji",fontSize:16,style:{whiteSpace:"pre"},textAnchor:"middle",transform:"translate(38.889 265.816)"},"Input"),w||(w=v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeLinecap:"round",strokeWidth:2,d:"M82.48 346.109c7.44 2.95 14.52 11.03 19.37 18.25 4.85 7.23 9.12 16.77 9.73 25.09.61 8.33-2.31 17.48-6.07 24.86-3.76 7.39-9.65 14.74-16.48 19.46s-16.31 7.93-24.51 8.85c-8.19.93-16.98.33-24.66-3.29s-16.61-11.34-21.42-18.42c-4.8-7.09-6.69-15.95-7.4-24.1-.72-8.16-.23-17.25 3.11-24.81 3.35-7.56 9.96-15.64 16.96-20.57s15.76-8.84 25.04-9c9.27-.16 24.63 6.04 30.62 8.05 6 2.01 5.57 3.35 5.34 4.02m-48.89-8.51c7.4-3.26 17.1-3.18 25.54-1.61 8.45 1.57 18.77 5.92 25.11 11.01 6.35 5.09 10.19 11.82 12.97 19.54s4.86 18.2 3.73 26.77c-1.14 8.57-5.07 18.43-10.54 24.63-5.47 6.21-14.01 9.92-22.26 12.58s-18.95 4.57-27.25 3.38c-8.31-1.2-16.19-5.13-22.55-10.53-6.37-5.41-12.98-13.64-15.64-21.89-2.67-8.26-2.09-19.6-.36-27.65 1.74-8.05 5.58-14.38 10.79-20.67 5.21-6.28 16.92-14.39 20.47-17.04 3.56-2.66.62.34.87 1.12"})),v.createElement("text",{x:28.048,y:14.096,fill:"#1e1e1e",dominantBaseline:"alphabetic",fontFamily:"Excalifont, Xiaolai, Segoe UI Emoji",fontSize:16,style:{whiteSpace:"pre"},textAnchor:"middle",transform:"translate(32.253 382.53)"},"Output"),k||(k=v.createElement("g",{strokeLinecap:"round",mask:"url(#mask-sb6RxJOMOsiqqCIFWnSw4)"},v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeWidth:2,d:"M173.929 396.046c-10.15-.1-51.84-.6-61.89-.51m60.55-.8c-9.69.13-48.33 2.3-58.22 2.31"}),v.createElement("path",{fill:"none",stroke:"#1e1e1e",strokeWidth:2,d:"M137.579 387.756c-6.33 1.04-11.03 5.82-23.21 9.29m23.21-9.29c-9.1 3.14-18.05 6.41-23.21 9.29M138.129 404.846c-6.41-2.98-11.23-2.22-23.76-7.8m23.76 7.8c-9.27-3.43-18.43-6.72-23.76-7.8"}))),A||(A=v.createElement("mask",{id:"mask-sb6RxJOMOsiqqCIFWnSw4"},v.createElement("path",{fill:"#fff",d:"M0 0h334.644v497.521H0z"}),v.createElement("path",{d:"M131.538 386.074h23.376v20h-23.376z"}))),v.createElement("text",{x:11.688,y:14.096,fill:"#1e1e1e",dominantBaseline:"alphabetic",fontFamily:"Excalifont, Xiaolai, Segoe UI Emoji",fontSize:16,style:{whiteSpace:"pre"},textAnchor:"middle",transform:"translate(131.538 386.074)"},"(5)")),I={},M="Using Tools",C={},q=[{value:"How Tool Calling Works",id:"how-tool-calling-works",level:2},{value:"Building an Agent with Tool Support",id:"building-an-agent-with-tool-support",level:2},{value:"How to add tools from presets",id:"how-to-add-tools-from-presets",level:3},{value:"How to notice tool calls",id:"how-to-notice-tool-calls",level:3},{value:"Example code",id:"example-code",level:3},{value:"Defining Your Own Tool",id:"defining-your-own-tool",level:2}];function Y(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,b.R)(),...e.components},{TabItem:n,Tabs:o,TerminalBox:r}=t;return n||B("TabItem",!0),o||B("Tabs",!0),r||B("TerminalBox",!0),(0,j.jsxs)(j.Fragment,{children:[(0,j.jsx)(t.header,{children:(0,j.jsx)(t.h1,{id:"using-tools",children:"Using Tools"})}),"\n",(0,j.jsx)(t.p,{children:"One of the most powerful features in Ailoy is the tool calling system. It allows\nyou to extend the capabilities of your LLM by connecting it to external tools or\nAPIs. This way, the agent can access real-time or domain-specific information,\neven if it wasn\u2019t part of the model\u2019s training data."}),"\n",(0,j.jsx)(t.p,{children:"For example, you can attach weather or location services to your agent. You\ncould also build a financial decision-making app using real-time exchange rates\nor stock prices. Moreover, the agent can execute financial decisions itself with\nLLM, enabling powerful automation."}),"\n",(0,j.jsx)(t.h2,{id:"how-tool-calling-works",children:"How Tool Calling Works"}),"\n",(0,j.jsx)(t.p,{children:"Let's take a quick look at how tool calling works in general. In most agent\nsystem, tool calling can be achieved by the following process."}),"\n",(0,j.jsx)("p",{align:"center",children:(0,j.jsx)(S,{style:{width:"40%",height:"40%"}})}),"\n",(0,j.jsxs)(t.ol,{children:["\n",(0,j.jsxs)(t.li,{children:[(0,j.jsx)(t.strong,{children:"[Tool Description]"})," Assistant (or LLM) can recognize a tool based on its\ndescription."]}),"\n",(0,j.jsxs)(t.li,{children:[(0,j.jsx)(t.strong,{children:"[User Query]"})," User provides an input prompt to the assistant."]}),"\n",(0,j.jsxs)(t.li,{children:[(0,j.jsx)(t.strong,{children:"[Tool Call]"})," If that query is related to a tool, assistant can invoke\nthe tool through a specified format."]}),"\n",(0,j.jsxs)(t.li,{children:[(0,j.jsx)(t.strong,{children:"[Tool Result]"})," Tool performs its task as invoked and returns the result."]}),"\n",(0,j.jsxs)(t.li,{children:[(0,j.jsx)(t.strong,{children:"[Assistant Response]"})," Assistant can incorporate the tool's output to\nproduce a more accurate answer."]}),"\n"]}),"\n",(0,j.jsx)(t.h2,{id:"building-an-agent-with-tool-support",children:"Building an Agent with Tool Support"}),"\n",(0,j.jsxs)(t.p,{children:["Now, let's see how to make a ",(0,j.jsx)(t.strong,{children:(0,j.jsx)(t.em,{children:"tool-aware agent"})})," in Ailoy."]}),"\n",(0,j.jsx)(t.h3,{id:"how-to-add-tools-from-presets",children:"How to add tools from presets"}),"\n",(0,j.jsxs)(t.p,{children:["In this example, we\u2019ll use the ",(0,j.jsx)(t.strong,{children:(0,j.jsx)(t.a,{href:"https://frankfurter.dev/",children:"Frankfurter API"})}),"\nto add functionality to lookup real-time currency exchange rates into your\n",(0,j.jsx)(t.code,{children:"Agent"}),"."]}),"\n",(0,j.jsxs)(t.p,{children:["The Frankfurter API tool is already defined as ",(0,j.jsx)(t.strong,{children:(0,j.jsx)(t.em,{children:"preset"})})," and included in the\nlibrary along with the other useful tools. So you just can call\n",(0,j.jsx)(t.code,{children:"add_tools_from_preset()"})," with the tool name to attach the tool into the\n",(0,j.jsx)(t.code,{children:"Agent"}),"."]}),"\n",(0,j.jsx)(t.p,{children:"Some presets can contain multiple tools which work together."}),"\n",(0,j.jsxs)(o,{groupId:"code-language",children:[(0,j.jsx)(n,{value:"python",label:"Python",children:(0,j.jsx)(t.pre,{children:(0,j.jsx)(t.code,{className:"language-python",metastring:"showLineNumbers",children:'agent.add_tools_from_preset("frankfurter")\n'})})}),(0,j.jsx)(n,{value:"node",label:"JavaScript(Node)",children:(0,j.jsx)(t.pre,{children:(0,j.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:'agent.addToolsFromPreset("frankfurter");\n'})})})]}),"\n",(0,j.jsx)(t.h3,{id:"how-to-notice-tool-calls",children:"How to notice tool calls"}),"\n",(0,j.jsxs)(t.p,{children:["You can find out what tool the agent invoked and what result it produced through\nthe response generated by ",(0,j.jsx)(t.code,{children:"agent.query()"}),".",(0,j.jsx)(t.br,{}),"\n","The ",(0,j.jsx)(t.code,{children:"type"})," field included in the response shows what type of response it is, and\nthe ",(0,j.jsx)(t.code,{children:"content"})," field has the content regardless of the type."]}),"\n",(0,j.jsxs)(t.p,{children:["For more information on response format, refer to the\n",(0,j.jsx)(t.strong,{children:(0,j.jsx)(t.a,{href:"../concepts/agent#agent-responses",children:"Agent > Agent Responses"})}),"."]}),"\n",(0,j.jsxs)(o,{groupId:"code-language",children:[(0,j.jsx)(n,{value:"python",label:"Python",children:(0,j.jsx)(t.pre,{children:(0,j.jsx)(t.code,{className:"language-python",metastring:"showLineNumbers",children:'for resp in agent.query(question):\n    # skip printing when the response is related to tool calls\n    if resp.type in ("tool_call", "tool_call_result"):\n        continue\n    agent.print(resp)\n'})})}),(0,j.jsx)(n,{value:"node",label:"JavaScript(Node)",children:(0,j.jsx)(t.pre,{children:(0,j.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:'for await (const resp of agent.query(question)) {\n  // skip printing when the response is related to tool calls\n  if (resp.type in ["tool_call", "tool_call_result"]) continue;\n  agent.print(resp);\n}\n'})})})]}),"\n",(0,j.jsx)(t.h3,{id:"example-code",children:"Example code"}),"\n",(0,j.jsx)(t.p,{children:"Let's see the entire example code using the Frankfurter API tool."}),"\n",(0,j.jsxs)(o,{groupId:"code-language",children:[(0,j.jsx)(n,{value:"python",label:"Python",children:(0,j.jsx)(t.pre,{children:(0,j.jsx)(t.code,{className:"language-python",metastring:"showLineNumbers",children:'from ailoy import Runtime, Agent, LocalModel\n\nrt = Runtime()\n\nwith Agent(rt, LocalModel("Qwen/Qwen3-8B")) as agent:\n    # Attach frankfurter\'s API\n    agent.add_tools_from_preset("frankfurter")\n\n    question = "I want to buy 250 U.S. Dollar and 350 Chinese Yuan with my Korean Won. How much do I need to take?"\n    print(f"Question: {question}\\n")\n    for resp in agent.query(question):\n        if resp.type == "output_text":\n            print(resp.content, end=\'\')\n        elif resp.type == "tool_call":\n            tool_name = resp.content.function.name\n            tool_arguments = resp.content.function.arguments\n            print(f"Tool call: {tool_name}({\', \'.join(f\'{k}="{v}"\' for k, v in tool_arguments.items())})\\n")\n        elif resp.type == "tool_call_result":\n            tool_result = resp.content\n            print(f"Tool result: {tool_result.content}\\n")\n        else:\n            raise TypeError("Unexpected response type.")\n    print()\n\nrt.stop()\n'})})}),(0,j.jsx)(n,{value:"node",label:"JavaScript(Node)",children:(0,j.jsx)(t.pre,{children:(0,j.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:'import { startRuntime, defineAgent, LocalModel } from "ailoy-node";\n\n(async () => {\n  const rt = await startRuntime();\n\n  const agent = await defineAgent(rt, LocalModel({ id: "Qwen/Qwen3-8B" }));\n\n  // Attach frankfurter\'s API\n  agent.addToolsFromPreset("frankfurter");\n\n  const question =\n    "I want to buy 250 U.S. Dollar and 350 Chinese Yuan with my Korean Won. How much do I need to take?";\n  console.log(`Question: ${question}\\n`);\n  for await (const resp of agent.query(question)) {\n    if (resp.type === "output_text") {\n      process.stdout.write(resp.content);\n    } else if (resp.type === "tool_call") {\n      const toolName = resp.content.function.name;\n      const toolArguments = resp.content.function.arguments;\n      const argString = Object.entries(toolArguments)\n        .map(([k, v]) => `${k}="${v}"`)\n        .join(", ");\n      console.log(`Tool call: ${toolName}(${argString})\\n`);\n    } else if (resp.type === "tool_call_result") {\n      const toolResult = resp.content;\n      console.log(`Tool result: ${toolResult.content}\\n`);\n    } else {\n      throw new TypeError("Unexpected response type.");\n    }\n  }\n\n  console.log();\n\n  await agent.delete();\n\n  await rt.stop();\n})();\n'})})})]}),"\n",(0,j.jsx)(t.p,{children:"You can see that the agent uses the Frankfurter API to incorporate real-time\nexchange rate information into its response."}),"\n",(0,j.jsx)(t.p,{children:"Here's what the output will look like:"}),"\n","\n",(0,j.jsx)(r,{children:'Question: I want to buy 250 U.S. Dollar and 350 Chinese Yuan with my Korean Won. How much do I need to take?\n\nTool call: frankfurter(symbols="USD,CNY", base="KRW")\n\nTool result: {"CNY": 0.00518, "USD": 0.00072}\n\nTo buy 250 U.S. Dollars (USD) and 350 Chinese Yuan (CNY) using Korean Won (KRW), you need to calculate the total amount of KRW required based on the exchange rates:\n\n- **1 USD = 0.00072 KRW**\n- **1 CNY = 0.00518 KRW**\n\n### Calculation:\n- **For USD**:  \n$ 250 \\, \\text{USD} \\times \\frac{1}{0.00072} = 250 \\times 1388.89 = 347,222.22 \\, \\text{KRW} $\n\n- **For CNY**:  \n$ 350 \\, \\text{CNY} \\times \\frac{1}{0.00518} = 350 \\times 193.18 = 67,613.39 \\, \\text{KRW} $\n\n### Total:\n- **KRW needed**: $ 347,222.22 + 67,613.39 = 414,835.61 \\, \\text{KRW} $\n\nYou will need approximately **414,835.61 KRW** to buy 250 USD and 350 CNY.'}),"\n","\n","\n",(0,j.jsxs)(t.admonition,{type:"warning",children:[(0,j.jsx)(t.p,{children:"Keep in mind: Tools aren't free \u2014 every token counts."}),(0,j.jsx)(t.p,{children:"Using many tools can generate a large amount of information for the AI to process, potentially leading to longer context lengths and decreased performance."}),(0,j.jsx)(t.p,{children:"Whether you're running AI through external APIs or using on-device models, it consumes resources.\nAPI usage can lead to unexpectedly high bills, while on-device AI may slow down your machine or even cause it to crash.\nWhether you're using external APIs or running models on-device, resources are consumed. API usage might result in unexpectedly high costs, while on-device models could slow down your machine or even cause it to crash."}),(0,j.jsx)(t.p,{children:"Avoid using unnecessary tools. Keep your chat context focused and concise."})]}),"\n","\n",(0,j.jsx)(t.h2,{id:"defining-your-own-tool",children:"Defining Your Own Tool"}),"\n",(0,j.jsx)(t.p,{children:"If the tool you are looking for doesn't exist, or you want more fine-grained\ncontrol, you can define your own tool through the simple APIs of Ailoy."}),"\n",(0,j.jsxs)(t.p,{children:["If you are using Python, you can define your own tool as a python function. Just\nwrite a function with\n",(0,j.jsx)(t.strong,{children:(0,j.jsx)(t.em,{children:(0,j.jsx)(t.a,{href:"https://google.github.io/styleguide/pyguide.html#383-functions-and-methods",children:"google-style docstring"})})}),",\nand add it as a tool."]}),"\n",(0,j.jsx)(o,{groupId:"code-language",children:(0,j.jsx)(n,{value:"python",label:"Python",children:(0,j.jsx)(t.pre,{children:(0,j.jsx)(t.code,{className:"language-python",metastring:"showLineNumbers",children:'def get_current_temperature(location: str, unit: str):\n    """\n    Get the current temperature at a location.\n\n    Args:\n        location: The location to get the temperature for, in the format "City, Country"\n        unit: The unit to return the temperature in. (choices: ["celsius", "fahrenheit"])\n    Returns:\n        The current temperature at the specified location in the specified units, as a float.\n    """\n    if unit == "celsius":\n        return 25\n    elif unit == "fahrenheit":\n        return 77\n    return\n\nwith Agent(...) as agent:\n    agent.add_py_function_tool(get_current_temperature)  # Just pass the function!\n'})})})}),"\n","\n",(0,j.jsx)(t.admonition,{type:"note",children:(0,j.jsxs)(t.p,{children:["You can add tools with various behaviors such as REST API, as well as Python\nfunctions.",(0,j.jsx)(t.br,{}),"\n","To see more details of using tools, refer to the ",(0,j.jsx)(t.strong,{children:(0,j.jsx)(t.a,{href:"../concepts/tools",children:"Tools"})}),"\nsection."]})}),"\n"]})}function T(e={}){const{wrapper:t}={...(0,b.R)(),...e.components};return t?(0,j.jsx)(t,{...e,children:(0,j.jsx)(Y,{...e})}):Y(e)}function B(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>s});var o=n(6540);const r={},a=o.createContext(r);function l(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);
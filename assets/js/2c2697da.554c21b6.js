"use strict";(self.webpackChunkailoy_docs=self.webpackChunkailoy_docs||[]).push([[803],{858:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/chat-ui-910c4fa27e3cc73b3429e908408ff6cc.png"},2852:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/builtin-tool-a8cab7d068b32310e15c578db626f728.gif"},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},8568:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/image-input-f199c1a49584dfa4ad5a2d33489104f3.gif"},9573:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"tutorial/webassembly-supports","title":"WebAssembly Supports","description":"{/ prettier-ignore-start /}","source":"@site/docs/tutorial/webassembly-supports.mdx","sourceDirName":"tutorial","slug":"/tutorial/webassembly-supports","permalink":"/ailoy/docs/tutorial/webassembly-supports","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"documentSidebar","previous":{"title":"RAG with Vector Store","permalink":"/ailoy/docs/tutorial/rag-with-vector-store"},"next":{"title":"Architecture","permalink":"/ailoy/docs/concepts/architecture"}}');var i=s(4848),r=s(8453);const o={},a="WebAssembly Supports",l={},c=[{value:"Hardware Requirements",id:"hardware-requirements",level:2},{value:"Building a Simple Chat UI",id:"building-a-simple-chat-ui",level:2},{value:"Setup Vite and install <code>ailoy-web</code>",id:"setup-vite-and-install-ailoy-web",level:3},{value:"Install and configure <code>assistant-ui</code>",id:"install-and-configure-assistant-ui",level:3},{value:"Implementation",id:"implementation",level:3},{value:"Additional Features",id:"additional-features",level:2},{value:"Using API models",id:"using-api-models",level:3},{value:"Multi-Modal Inputs",id:"multi-modal-inputs",level:3},{value:"Using Builtin Tools",id:"using-builtin-tools",level:3},{value:"Using MCP Tools",id:"using-mcp-tools",level:3},{value:"Using Vector Stores",id:"using-vector-stores",level:2},{value:"Defining a Vector Store",id:"defining-a-vector-store",level:3},{value:"Inserting Documents",id:"inserting-documents",level:3},{value:"Retrieving Documents",id:"retrieving-documents",level:3},{value:"Clearing the Vector Store",id:"clearing-the-vector-store",level:3}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{TerminalBox:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("TerminalBox",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"webassembly-supports",children:"WebAssembly Supports"})}),"\n","\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["WebAssembly support is currently ",(0,i.jsx)(n.strong,{children:"experimental"}),", and you may encounter unexpected errors.\nIf you do, please report them via our ",(0,i.jsx)(n.strong,{children:"GitHub Issues"})," or ",(0,i.jsx)(n.strong,{children:"Discord"})," channels so we can address them promptly."]})}),"\n","\n",(0,i.jsxs)(n.p,{children:["Ailoy supports running agents entirely in modern web browsers using\n",(0,i.jsx)(n.strong,{children:"WebAssembly (WASM)"}),". This enables AI workloads directly in the browser with\nno backend required."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Key capabilities"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Run local models accelerated by ",(0,i.jsx)(n.strong,{children:"WebGPU"}),"\u2014supports both ",(0,i.jsx)(n.strong,{children:"Agents"})," and\n",(0,i.jsx)(n.strong,{children:"VectorStores"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Use API models just like you would in native environments."}),"\n",(0,i.jsx)(n.li,{children:"Access built-in tools, or register your own custom tools"}),"\n",(0,i.jsxs)(n.li,{children:["Connect ",(0,i.jsx)(n.strong,{children:"MCP tools"})," via Streamable HTTP, Server-Sent Events (SSE), or\nWebSocket transports."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This guide walks you through setting up and using ",(0,i.jsx)(n.code,{children:"ailoy-web"})," in your\nbrowser-based applications."]}),"\n",(0,i.jsx)(n.h2,{id:"hardware-requirements",children:"Hardware Requirements"}),"\n",(0,i.jsxs)(n.p,{children:["If you plan to run local models with WebGPU, make sure your system has the\nnecessary hardware accelerators and drivers installed. See\n",(0,i.jsx)(n.a,{href:"/ailoy/docs/concepts/devices-environments",children:(0,i.jsx)(n.strong,{children:"Device & Environments"})})," for more\ndetails."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"MacOS with Apple Silicon"}),": Fully supported, typically works out of the box."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Windows / Linux with NVIDIA or AMD GPUs"}),": Ensure that the latest GPU\ndrivers are installed."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["In addition, WebGPU must support certain features\u2014such as ",(0,i.jsx)(n.code,{children:"shader-f16"}),". You can\nquickly verify your setup using the ",(0,i.jsx)(n.code,{children:"isWebGPUSupported"})," utility:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import { isWebGPUSupported } from "ailoy-web";\n\nconst { supported, reason } = await isWebGPUSupported();\nif (supported) {\n  // WebGPU is supported\n  console.log("\u2705 WebGPU is available!");\n} else {\n  // WebGPU is not supported\n  console.log(\n    "\u274c WebGPU is not available due to the following reason: ",\n    reason\n  );\n}\n'})}),"\n","\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["If WebGPU is not supported, consider showing users a clear message in your UI that explains\nwhy\u2014using the ",(0,i.jsx)(n.code,{children:"reason"})," value returned by the function."]})}),"\n","\n",(0,i.jsx)(n.h2,{id:"building-a-simple-chat-ui",children:"Building a Simple Chat UI"}),"\n",(0,i.jsxs)(n.p,{children:["In this tutorial, we're going to build a simple chat UI application using Ailoy.\nYou can see the full example codes in\n",(0,i.jsx)(n.a,{href:"https://github.com/brekkylab/ailoy/tree/main/examples/web-assistant-ui",children:"our repository"}),"."]}),"\n",(0,i.jsxs)(n.h3,{id:"setup-vite-and-install-ailoy-web",children:["Setup Vite and install ",(0,i.jsx)(n.code,{children:"ailoy-web"})]}),"\n",(0,i.jsxs)(n.p,{children:["We recommend using ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://vite.dev/",children:"Vite"})})," for a fast development\nenvironment and optimized builds. Still you can use another build tools you\nprefer, such as Webpack, Rollup, or Parcel."]}),"\n",(0,i.jsxs)(n.p,{children:["In this example, we use Vite to create a project with ",(0,i.jsx)(n.strong,{children:"React + TypeScript"}),"\nconfiguration."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Let's create a Vite project by running ",(0,i.jsx)(n.code,{children:"npm create vite@latest"}),"."]}),"\n"]}),"\n","\n",(0,i.jsxs)(t,{children:[(0,i.jsx)(n.p,{children:"$ npm create vite@latest"}),(0,i.jsx)(n.p,{children:"> npx\n> create-vite"}),(0,i.jsx)(n.p,{children:"\u2502\n\u25c7  Project name:\n\u2502  my-project\n\u2502\n\u25c7  Select a framework:\n\u2502  React\n\u2502\n\u25c7  Select a variant:\n\u2502  TypeScript\n\u2502\n\u25c7  Scaffolding project in /path/of/my-project...\n\u2502\n\u2514  Done. Now run:"}),(0,i.jsx)(n.p,{children:"cd my-project\nnpm install\nnpm run dev"})]}),"\n","\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Next, navigate to your new project and install ",(0,i.jsx)(n.code,{children:"ailoy-web"}),". This will also\ninstall packages preconfigured in ",(0,i.jsx)(n.code,{children:"package.json"}),"."]}),"\n"]}),"\n","\n",(0,i.jsxs)(t,{children:[(0,i.jsx)(n.p,{children:"$ cd my-project\n$ npm install ailoy-web"}),(0,i.jsx)(n.p,{children:"added 265 packages, and audited 266 packages in 4s"}),(0,i.jsxs)(n.p,{children:["64 packages are looking for funding\nrun ",(0,i.jsx)(n.code,{children:"npm fund"})," for details"]}),(0,i.jsx)(n.p,{children:"found 0 vulnerabilities"})]}),"\n","\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["To ensure optimal performance and compatibility, update your ",(0,i.jsx)(n.code,{children:"vite.config.ts"}),"\nwith the following settings:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Exclude ",(0,i.jsx)(n.code,{children:"ailoy-web"})," from dependency optimization (",(0,i.jsx)(n.code,{children:"optimizeDeps.exclude"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Enable cross-origin isolation (required for ",(0,i.jsx)(n.code,{children:"SharedArrayBuffer"})," in WASM\nthreading)"]}),"\n",(0,i.jsxs)(n.li,{children:["Optimize bundle size by grouping ",(0,i.jsx)(n.code,{children:"ailoy-web"})," into its own build chunk"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import react from "@vitejs/plugin-react";\nimport { defineConfig } from "vite";\n\nexport default defineConfig({\n  plugins: [react()],\n  optimizeDeps: {\n    exclude: ["ailoy-web"],\n  },\n  server: {\n    headers: {\n      "Cross-Origin-Embedder-Policy": "require-corp",\n      "Cross-Origin-Opener-Policy": "same-origin",\n    },\n  },\n  build: {\n    rollupOptions: {\n      output: {\n        manualChunks: {\n          ailoy: ["ailoy-web"],\n        },\n      },\n    },\n  },\n});\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"install-and-configure-assistant-ui",children:["Install and configure ",(0,i.jsx)(n.code,{children:"assistant-ui"})]}),"\n",(0,i.jsxs)(n.p,{children:["For this quick demo, we'll use ",(0,i.jsx)(n.a,{href:"https://www.assistant-ui.com/",children:(0,i.jsx)(n.strong,{children:"assistant-ui"})}),"\npackage to create a basic chat interface."]}),"\n",(0,i.jsxs)(n.p,{children:["It relies on ",(0,i.jsx)(n.a,{href:"https://ui.shadcn.com/docs/installation/vite",children:(0,i.jsx)(n.strong,{children:"shadcn"})}),", so\nwe'll set that up first. Follow the guide from\n",(0,i.jsx)(n.a,{href:"https://ui.shadcn.com/docs/installation/vite",children:"shadcn's documentation"}),"."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Edit ",(0,i.jsx)(n.code,{children:"tsconfig.json"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:"{11-16}",children:'{\n  "files": [],\n  "references": [\n    {\n      "path": "./tsconfig.app.json"\n    },\n    {\n      "path": "./tsconfig.node.json"\n    }\n  ],\n  "compilerOptions": {\n    "baseUrl": ".",\n    "paths": {\n      "@/*": ["./src/*"]\n    }\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Edit ",(0,i.jsx)(n.code,{children:"tsconfig.app.json"})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:"{4-7}",children:'{\n  "compilerOptions": {\n    // ...\n    "baseUrl": ".",\n    "paths": {\n      "@/*": ["./src/*"]\n    }\n    // ...\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["Install ",(0,i.jsx)(n.code,{children:"tailwind"})," and update ",(0,i.jsx)(n.code,{children:"vite.config.ts"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t,{children:[(0,i.jsx)(n.p,{children:"$ npm install --save-dev tailwindcss @tailwindcss/vite @types/node"}),(0,i.jsx)(n.p,{children:"added 22 packages, and audited 215 packages in 3s"}),(0,i.jsxs)(n.p,{children:["51 packages are looking for funding run ",(0,i.jsx)(n.code,{children:"npm fund"})," for details"]}),(0,i.jsx)(n.p,{children:"found 0 vulnerabilities"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:"{1-2,8-13}",children:'import path from "node:path";\nimport tailwindcss from "@tailwindcss/vite";\nimport react from "@vitejs/plugin-react";\nimport { defineConfig } from "vite";\n\n// https://vite.dev/config/\nexport default defineConfig({\n  plugins: [react(), tailwindcss()],\n  resolve: {\n    alias: {\n      "@": path.resolve(__dirname, "./src"),\n    },\n  },\n  // other configs\n});\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:["Update ",(0,i.jsx)(n.code,{children:"src/index.css"})," to use tailwindcss."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:'@import "tailwindcss";\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsxs)(n.li,{children:["Install ",(0,i.jsx)(n.code,{children:"assistant-ui"})," and add thread component.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"npx assistant-ui add thread"})]}),"\n"]}),"\n","\n",(0,i.jsxs)(t,{children:[(0,i.jsx)(n.p,{children:"$ npx assistant-ui add thread\n\u2714 You need to create a components.json file to add components. Proceed? \u2026 yes\n\u2714 Which color would you like to use as the base color? \u203a Neutral\n\u2714 Writing components.json.\n\u2714 Checking registry.\n\u2714 Installing dependencies.\n\u2714 Created 6 files:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"src/components/assistant-ui/thread.tsx"}),"\n",(0,i.jsx)(n.li,{children:"src/components/assistant-ui/markdown-text.tsx"}),"\n",(0,i.jsx)(n.li,{children:"src/components/assistant-ui/tooltip-icon-button.tsx"}),"\n",(0,i.jsx)(n.li,{children:"src/components/assistant-ui/tool-fallback.tsx"}),"\n",(0,i.jsx)(n.li,{children:"src/components/ui/button.tsx"}),"\n",(0,i.jsx)(n.li,{children:"src/components/ui/tooltip.tsx"}),"\n"]})]}),"\n","\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsxs)(n.li,{children:["Install ",(0,i.jsx)(n.code,{children:"framer-motion"})," package which is required by ",(0,i.jsx)(n.code,{children:"assistant-ui"}),"'s\nthread.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"npm install framer-motion"})]}),"\n"]}),"\n","\n",(0,i.jsxs)(t,{children:[(0,i.jsx)(n.p,{children:"$ npm install framer-motion"}),(0,i.jsx)(n.p,{children:"up to date, audited 374 packages in 696ms"}),(0,i.jsxs)(n.p,{children:["141 packages are looking for funding\nrun ",(0,i.jsx)(n.code,{children:"npm fund"})," for details"]}),(0,i.jsx)(n.p,{children:"found 0 vulnerabilities"})]}),"\n","\n",(0,i.jsxs)(n.ol,{start:"7",children:["\n",(0,i.jsxs)(n.li,{children:["Due to ",(0,i.jsx)(n.code,{children:'"verbatimModuleSyntax": true'})," configuration, you need to fix\n",(0,i.jsx)(n.code,{children:"src/components/assistant-ui/tool-fallback.tsx"})," to prevent compile error."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:"{1}",children:'import type { ToolCallMessagePartComponent } from "@assistant-ui/react";\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from "lucide-react";\n\n// ...\n'})}),"\n",(0,i.jsx)(n.h3,{id:"implementation",children:"Implementation"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Create ",(0,i.jsx)(n.code,{children:"src/AiloyRuntimeProvider.tsx"})," and write the code as follow:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'"use client";\n\nimport { useState, useEffect, type ReactNode } from "react";\nimport {\n  AssistantRuntimeProvider,\n  useExternalStoreRuntime,\n  useExternalMessageConverter,\n  type AppendMessage,\n} from "@assistant-ui/react";\nimport * as ai from "ailoy-web";\n\nexport function AiloyRuntimeProvider({\n  children,\n}: Readonly<{ children: ReactNode }>) {\n  const [agent, setAgent] = useState<ai.Agent | undefined>(undefined);\n  const [agentLoading, setAgentLoading] = useState<boolean>(false);\n  const [messages, setMessages] = useState<\n    (ai.UserMessage | ai.AgentResponse)[]\n  >([]);\n  const [isAnswering, setIsAnswering] = useState<boolean>(false);\n\n  useEffect(() => {\n    (async () => {\n      const { supported, reason } = await ai.isWebGPUSupported();\n      if (!supported) {\n        alert(`WebGPU is not supported: ${reason!}`);\n        return;\n      }\n\n      setAgentLoading(true);\n      const runtime = await ai.startRuntime();\n      const agent = await ai.defineAgent(\n        runtime,\n        ai.LocalModel({ id: "Qwen/Qwen3-0.6B" })\n      );\n      setAgent(agent);\n      setAgentLoading(false);\n    })();\n  }, []);\n\n  const onNew = async (message: AppendMessage) => {\n    if (agent === undefined) throw new Error("Agent is not initialized yet");\n\n    if (message.content[0]?.type !== "text")\n      throw new Error("Only text messages are supported");\n\n    const input = message.content[0].text;\n    const userMessage: ai.UserMessage = {\n      role: "user",\n      content: input,\n    };\n    setMessages((prev) => [...prev, userMessage]);\n    setIsAnswering(true);\n\n    for await (const resp of agent.query(input)) {\n      if (resp.type === "output_text" || resp.type === "reasoning") {\n        if (resp.isTypeSwitched) {\n          setMessages((prev) => [...prev, resp]);\n        } else {\n          setMessages((prev) => {\n            const last = prev[prev.length - 1];\n            last.content += resp.content;\n            return [...prev.slice(0, -1), last];\n          });\n        }\n      } else {\n        setMessages((prev) => [...prev, resp]);\n      }\n    }\n    setIsAnswering(false);\n  };\n\n  const convertedMessages = useExternalMessageConverter({\n    messages,\n    callback: (message: ai.UserMessage | ai.AgentResponse) => {\n      if (message.role === "user") {\n        return {\n          role: message.role,\n          content: [{ type: "text", text: message.content as string }],\n        };\n      } else if (message.type === "output_text") {\n        return {\n          role: "assistant",\n          content: [{ type: "text", text: message.content }],\n        };\n      } else if (message.type === "reasoning") {\n        return {\n          role: "assistant",\n          content: [{ type: "reasoning", text: message.content }],\n        };\n      } else if (message.type === "tool_call") {\n        return {\n          role: "assistant",\n          content: [\n            {\n              type: "tool-call",\n              toolCallId: message.content.id!,\n              toolName: message.content.function.name,\n              args: message.content.function.arguments,\n            },\n          ],\n        };\n      } else if (message.type === "tool_call_result") {\n        return {\n          role: "tool",\n          toolCallId: message.content.tool_call_id!,\n          result: message.content.content[0].text,\n        };\n      } else {\n        throw new Error(`Unknown message type: ${message.type}`);\n      }\n    },\n    isRunning: isAnswering,\n    joinStrategy: "concat-content",\n  });\n\n  const runtime = useExternalStoreRuntime({\n    isLoading: agentLoading,\n    isDisabled: agent === undefined,\n    isRunning: isAnswering,\n    messages: convertedMessages,\n    onNew,\n  });\n\n  return (\n    <AssistantRuntimeProvider runtime={runtime}>\n      {children}\n    </AssistantRuntimeProvider>\n  );\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Update ",(0,i.jsx)(n.code,{children:"src/App.tsx"})," to wrap ",(0,i.jsx)(n.code,{children:"<Thread />"})," inside ",(0,i.jsx)(n.code,{children:"<AiloyRuntimeProvider>"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { Thread } from "@/components/assistant-ui/thread";\nimport { AiloyRuntimeProvider } from "./AiloyRuntimeProvider";\n\nfunction App() {\n  return (\n    <AiloyRuntimeProvider>\n      <Thread />\n    </AiloyRuntimeProvider>\n  );\n}\n\nexport default App;\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["React\u2019s ",(0,i.jsx)(n.code,{children:"<StrictMode>"})," can cause components to mount twice during\ndevelopment.",(0,i.jsx)(n.br,{}),"\n","To avoid double state updates, remove ",(0,i.jsx)(n.code,{children:"<StrictMode>"})," from ",(0,i.jsx)(n.code,{children:"src/main.tsx"}),":"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.tsx'\n\ncreateRoot(document.getElementById('root')!).render(\n  // <StrictMode>\n    <App />\n  // </StrictMode>,\n)\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:["Start the development server with ",(0,i.jsx)(n.code,{children:"npm run dev"}),"."]}),"\n"]}),"\n","\n",(0,i.jsxs)(t,{children:[(0,i.jsx)(n.p,{children:"$ npm run dev"}),(0,i.jsx)(n.p,{children:"VITE v7.1.1  ready in 318 ms"}),(0,i.jsxs)(n.p,{children:["\u279c  Local:   ",(0,i.jsx)(n.a,{href:"http://localhost:5173/",children:"http://localhost:5173/"}),"\n\u279c  Network: use --host to expose\n\u279c  press h + enter to show help"]})]}),"\n","\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsxs)(n.li,{children:["Visit ",(0,i.jsx)(n.a,{href:"http://localhost:5173",children:"http://localhost:5173"})," \u2014 your chat UI should be live."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(858).A+"",width:"1058",height:"997"})}),"\n","\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["When the agent initializes for the first time, model parameters are downloaded\nfrom Ailoy\u2019s file server. These files are stored in the browser\u2019s\n",(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/File_System_API/Origin_private_file_system",children:(0,i.jsx)(n.strong,{children:"Origin Private File System(OPFS)"})}),"\nwhich is isolated per origin and managed internally by the browser."]}),(0,i.jsx)(n.p,{children:"Once initialization completes, you can start chatting with the agent."})]}),"\n","\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsxs)(n.li,{children:["Try to start a conversation with the agent running ",(0,i.jsx)(n.em,{children:"on your web browser"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(9653).A+"",width:"944",height:"882"})}),"\n",(0,i.jsxs)(n.p,{children:["\ud83c\udf89 ",(0,i.jsx)(n.strong,{children:"Congratulations!"})," You now have a fully local AI agent running ",(0,i.jsx)(n.strong,{children:"entirely\nin your browser"})," with zero backend servers!"]}),"\n",(0,i.jsx)(n.h2,{id:"additional-features",children:"Additional Features"}),"\n",(0,i.jsx)(n.h3,{id:"using-api-models",children:"Using API models"}),"\n",(0,i.jsx)(n.p,{children:"You can easily switch to API models by changing the model configuration as\nbelow."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const agent = await ai.defineAgent(\n  runtime,\n  // ai.LocalModel({ id: "Qwen/Qwen3-0.6B" })\n  ai.APIModel({\n    id: "gpt-5-mini",\n    apiKey: "<YOUR_OPENAI_API_KEY>",\n  })\n);\n'})}),"\n","\n",(0,i.jsxs)(n.p,{children:["You can use any API models listed in ",(0,i.jsx)(n.a,{href:"http://localhost:3000/ailoy/docs/concepts/agent#api-models",children:(0,i.jsx)(n.strong,{children:"supported API models"})}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["The above code is for test purpose. ",(0,i.jsx)(n.strong,{children:"You should never hardcode your API keys in your frontend codes!"}),"\nFor example, consider making an input box to get API key from users and initialize agents using the key."]})}),"\n","\n",(0,i.jsx)(n.h3,{id:"multi-modal-inputs",children:"Multi-Modal Inputs"}),"\n","\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["Multi-Modal inputs are currently supported only on API models as\ndescribed in\n",(0,i.jsx)(n.a,{href:"http://localhost:3000/ailoy/docs/concepts/agent#multi-modal-inputs",children:(0,i.jsx)(n.strong,{children:"Agent > Multi-Modal Inputs"})}),"."]})}),"\n","\n",(0,i.jsxs)(n.p,{children:["Follow the guide in assistant-ui's\n",(0,i.jsx)(n.a,{href:"https://www.assistant-ui.com/docs/guides/Attachments",children:(0,i.jsx)(n.strong,{children:"Attachments documentation"})}),"\nto enable file attachment functionality."]}),"\n",(0,i.jsx)(n.p,{children:"Install attachment UI component."}),"\n",(0,i.jsx)(t,{children:(0,i.jsxs)(n.p,{children:['$ npx shadcn@latest add "',(0,i.jsx)(n.a,{href:"https://r.assistant-ui.com/attachment",children:"https://r.assistant-ui.com/attachment"}),'"']})}),"\n",(0,i.jsxs)(n.p,{children:["Similar to what we did for Thread component, edit\n",(0,i.jsx)(n.code,{children:"src/components/assistant-ui/attachment.tsx"})," as below to fix compile error."]}),"\n","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:"{1}",children:'import { type PropsWithChildren, useEffect, useState, type FC } from "react";\nimport { CircleXIcon, FileIcon, PaperclipIcon } from "lucide-react";\n'})}),"\n","\n",(0,i.jsxs)(n.p,{children:["Edit ",(0,i.jsx)(n.code,{children:"src/components/assistant-ui/thread.tsx"})," to add attachment components."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:"{1-5,15-17,29-31,44}",children:'import {\n  ComposerAttachments,\n  ComposerAddAttachment,\n  UserMessageAttachments,\n} from "./attachment";\n\n// Update Composer\nconst Composer: FC = () => {\n  return (\n    <div ...>\n      <ThreadScrollToBottom />\n      <ThreadPrimitive.Empty>\n        <ThreadWelcomeSuggestions />\n      </ThreadPrimitive.Empty>\n      <ThreadPrimitive.Empty>\n        <ComposerAttachments />\n      </ThreadPrimitive.Empty>\n      <ComposerPrimitive.Root ...>\n        // ...\n      </ComposerPrimitive.Root>\n    </div>\n  )\n}\n\n// Update ComposerAction\nconst ComposerAction: FC = () => {\n  return (\n    <div ...>\n      <ThreadPrimitive.If running={false}>\n        <ComposerAddAttachment />\n      </ThreadPrimitive.If>\n      // ...\n    </div>\n  )\n}\n\n// Update UserMessage\nconst UserMessage: FC = () => {\n  return (\n    <MessagePrivitive.Root asChild>\n      <motion.div\n        // ...\n      >\n        <UserMessageAttachments />\n        <UserActionBar />\n        // ...\n      </motion.div>\n    </MessagePrivitive.Root>\n  )\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In ",(0,i.jsx)(n.code,{children:"src/AiloyRuntimeProvider.tsx"}),", update ",(0,i.jsx)(n.code,{children:"onNew"})," to handle image contents."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:"{4-27}",children:'const onNew = async (message: AppendMessage) => {\n  // ...\n\n  let userContent: ai.UserMessage["content"] = [];\n\n  // Add attachments\n  if (message.attachments !== undefined) {\n    for (const attach of message.attachments) {\n      if (attach.type === "image") {\n        const imageContent = await ai.ImageContent.fromFile(attach.file!);\n        userContent.push(imageContent);\n      }\n      // other types are skipped\n    }\n  }\n\n  // Add text prompt\n  if (message.content[0]?.type !== "text")\n    throw new Error("Only text messages are supported");\n  const textContent: ai.TextContent = {\n    type: "text",\n    text: message.content[0].text,\n  };\n  userContent.push(textContent);\n\n  // Set messages\n  setMessages((prev) => [...prev, { role: "user", content: userContent }]);\n\n  // ...\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Update the message conversion callback in ",(0,i.jsx)(n.code,{children:"useExternalMessageConverter"})," to\nhandle multimodal contents."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:"{4-23}",children:'const convertedMessages = useExternalMessageConverter({\n  messages,\n  callback: (message: ai.UserMessage | ai.AgentResponse) => {\n    if (message.role === "user") {\n      if (typeof message.content === "string") {\n        return {\n          role: message.role,\n          content: [{ type: "text", text: message.content }],\n        };\n      } else {\n        return {\n          role: message.role,\n          content: message.content.map((c) => {\n            if (c.type === "text") return c;\n            else if (c.type === "image_url")\n              return { type: "image", image: c.image_url.url };\n            else if (c.type === "input_audio")\n              return { type: "audio", audio: c.input_audio };\n            else throw Error("Unknown content type");\n          }),\n        };\n      }\n    }\n    // ...\n  },\n});\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Add ",(0,i.jsx)(n.code,{children:"adapters"})," on ",(0,i.jsx)(n.code,{children:"useExternalStoreRuntime"})," to handle image file attachments."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:"{1-5,9-14}",children:'import {\n  CompositeAttachmentAdapter,\n  SimpleImageAttachmentAdapter,\n  SimpleTextAttachmentAdapter,\n} from "@assistant-ui/react";\n\nconst runtime = useExternalStoreRuntime({\n  // ...\n  adapters: {\n    attachments: new CompositeAttachmentAdapter([\n      new SimpleImageAttachmentAdapter(),\n      new SimpleTextAttachmentAdapter(),\n    ]),\n  },\n});\n'})}),"\n",(0,i.jsx)(n.p,{children:"Now you can attach images and ask about them."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(8568).A+"",width:"944",height:"882"})}),"\n",(0,i.jsx)(n.h3,{id:"using-builtin-tools",children:"Using Builtin Tools"}),"\n",(0,i.jsxs)(n.p,{children:["You can use any tool presets as described in\n",(0,i.jsx)(n.a,{href:"../concepts/tools#out-of-the-box-tools",children:(0,i.jsx)(n.strong,{children:"Out-of-the-box tools"})}),". Let's add\nhandling tool call and tool result messages and see how it works."]}),"\n",(0,i.jsxs)(n.p,{children:["After ",(0,i.jsx)(n.code,{children:"agent"})," is defined, add ",(0,i.jsx)(n.code,{children:"calculator"})," tool preset as below."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'await agent.addToolsFromPreset("calculator");\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Update the code in ",(0,i.jsx)(n.code,{children:"<MessageList>"})," as below to show the corresponding message\ncontent for each message type."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'<MessageList>\n  {messages.map((message, idx) => {\n    let content = "";\n    if (message.role === "user") {\n      content = (message as ai.UserMessage).content as string;\n    } else if (\n      message.type === "output_text" ||\n      message.type === "reasoning"\n    ) {\n      content = (message as ai.AgentResponse).content as string;\n    } else if (message.type === "tool_call") {\n      content = `Tool Call: ${message.content.function.name} (${message.content.id})`;\n      content += `\\nArguments: ${JSON.stringify(\n        message.content.function.arguments\n      )}`;\n    } else if (message.type === "tool_call_result") {\n      content = `Tool Result (${message.content.tool_call_id})`;\n      content += `\\nContent: ${message.content.content[0].text}`;\n    }\n\n    return (\n      <Message\n        key={`message-${idx}`}\n        model={{\n          direction:\n            message.role === "user" ? "outgoing" : "incoming",\n          position: "normal",\n          sender: message.role,\n          message: content,\n        }}\n      />\n    );\n  })}\n</MessageList>\n'})}),"\n",(0,i.jsx)(n.p,{children:"Test the tool calling with the prompt that might invoke the calculator tool."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"tool calling",src:s(2852).A+"",width:"944",height:"882"})}),"\n",(0,i.jsx)(n.h3,{id:"using-mcp-tools",children:"Using MCP Tools"}),"\n",(0,i.jsxs)(n.p,{children:["You can register MCP clients and use their tools in agents via\n",(0,i.jsx)(n.a,{href:"https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#streamable-http",children:"Streamable HTTP"}),",\n",(0,i.jsx)(n.a,{href:"https://modelcontextprotocol.io/specification/2024-11-05/basic/transports#http-with-sse",children:"Server-Sent Event"}),",\nand WebSocket transports. Note that\n",(0,i.jsx)(n.a,{href:"https://modelcontextprotocol.io/specification/2025-03-26/basic/transports#stdio",children:"stdio"}),"\ntransport is not supported in browsers because they cannot run a stdio process."]}),"\n","\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["When connecting to MCP servers from browsers, make sure the server is configured\nto use ",(0,i.jsx)(n.strong,{children:"CORS middleware"})," with allowing your origins and exposing required\nheaders such as ",(0,i.jsx)(n.code,{children:"Mcp-Session-Id"}),". See\n",(0,i.jsx)(n.a,{href:"https://github.com/modelcontextprotocol/typescript-sdk?tab=readme-ov-file#cors-configuration-for-browser-based-clients",children:"the official documentation"}),"\nfor more details."]})}),"\n","\n",(0,i.jsx)(n.p,{children:"Let's create a simple MCP server for testing MCP tools availability."}),"\n",(0,i.jsx)(n.p,{children:"Install the following packages."}),"\n","\n",(0,i.jsx)(t,{children:(0,i.jsx)(n.p,{children:"$ npm install express cors zod @modelcontextprotocol/sdk\n$ npm install --save-dev @types/express @types/cors"})}),"\n","\n",(0,i.jsxs)(n.p,{children:["Create ",(0,i.jsx)(n.code,{children:"src/mcpServer.ts"})," and write the code as below:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";\nimport { StreamableHTTPServerTransport } from "@modelcontextprotocol/sdk/server/streamableHttp.js";\nimport cors from "cors";\nimport express, { type Request, type Response } from "express";\nimport * as z from "zod/v3";\n\n// Create an MCP server\nconst server = new McpServer({\n  name: "demo-server",\n  version: "1.0.0",\n});\n\n// Add an addition tool\nserver.registerTool(\n  "add",\n  {\n    title: "Addition Tool",\n    description: "Add two numbers",\n    inputSchema: { a: z.number(), b: z.number() },\n  },\n  async ({ a, b }) => ({\n    content: [{ type: "text", text: String(a + b) }],\n  })\n);\n\nconst app = express();\napp.use(express.json());\napp.use(\n  cors({\n    origin: "*",\n    exposedHeaders: "*",\n  })\n);\n\napp.post("/mcp", async (req: Request, res: Response) => {\n  try {\n    const transport = new StreamableHTTPServerTransport({\n      sessionIdGenerator: undefined,\n    });\n    res.on("close", () => {\n      transport.close();\n      server.close();\n    });\n    await server.connect(transport);\n    await transport.handleRequest(req, res, req.body);\n  } catch (error) {\n    if (!res.headersSent) {\n      res.status(500).json({\n        jsonrpc: "2.0",\n        error: {\n          code: -32603,\n          message: "Internal server error",\n        },\n        id: null,\n      });\n    }\n  }\n});\n\nconst PORT = 3000;\napp.listen(PORT, () => {\n  console.log(`MCP server listening on ${PORT}`);\n});\n'})}),"\n","\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["Note that we used ",(0,i.jsx)(n.code,{children:"zod/v3"})," since the current latest version of MCP sdk does not work with zod v4.\n(",(0,i.jsx)(n.a,{href:"https://github.com/modelcontextprotocol/modelcontextprotocol/issues/1072",children:"related issue"}),")"]})}),"\n","\n",(0,i.jsxs)(n.p,{children:["This MCP server runs on streamable HTTP transport and has a single tool ",(0,i.jsx)(n.code,{children:"add"}),"\nwhich takes two numbers and return the addition. The server runs on\n",(0,i.jsx)(n.code,{children:"localhost:3000"})," and uses CORS middleware to allow any origins."]}),"\n",(0,i.jsxs)(n.p,{children:["Install ",(0,i.jsx)(n.code,{children:"vite-node"})," and add a script in ",(0,i.jsx)(n.code,{children:"package.json"})," to run this server using\n",(0,i.jsx)(n.code,{children:"vite-node"}),"."]}),"\n",(0,i.jsx)(t,{children:(0,i.jsx)(n.p,{children:"$ npm install --save-dev vite-node"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:"{3}",children:'  "scripts": {\n    // ...\n    "dev:mcp": "vite-node src/mcpServer.ts"\n  }\n'})}),"\n",(0,i.jsx)(n.p,{children:"Run the MCP server."}),"\n","\n",(0,i.jsxs)(t,{children:[(0,i.jsxs)(n.p,{children:["$ npm run dev",":mcp"]}),(0,i.jsxs)(n.p,{children:["> my-project@0.0.0 dev",":mcp","\n> vite-node src/mcpServer.ts"]}),(0,i.jsx)(n.p,{children:"MCP server listening on 3000"})]}),"\n","\n",(0,i.jsxs)(n.p,{children:["In ",(0,i.jsx)(n.code,{children:"src/AiloyRuntimeProvider.tsx"}),", add MCP tools after the agent has been\ninitialized."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",metastring:"{3-8}",children:'const agent = ...;\n\nawait agent.addToolsFromMcpClient(\n  "calculator",\n  new ai.MCPStreamableHTTPClientTransport(\n    new URL("http://localhost:3000/mcp")\n  )\n);\n'})}),"\n",(0,i.jsx)(n.p,{children:"Check if MCP tools work as expected."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(9879).A+"",width:"944",height:"882"})}),"\n",(0,i.jsx)(n.h2,{id:"using-vector-stores",children:"Using Vector Stores"}),"\n",(0,i.jsxs)(n.p,{children:["You can interact with Vector Stores in Ailoy Web using the same API described in\n",(0,i.jsx)(n.a,{href:"/ailoy/docs/tutorial/rag-with-vector-store",children:(0,i.jsx)(n.strong,{children:"RAG with Vector Store"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["When combined with ",(0,i.jsx)(n.strong,{children:"local embedding models"})," and ",(0,i.jsx)(n.strong,{children:"in-memory vector stores"}),"\nsuch as ",(0,i.jsx)(n.strong,{children:"Faiss"}),", you can build a fully client-side RAG application that runs\nentirely inside the user's browser\u2014no backend servers required. This approach is\nideal for privacy-preserving, offline-capable AI assistants."]}),"\n",(0,i.jsx)(n.h3,{id:"defining-a-vector-store",children:"Defining a Vector Store"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import * as ai from "ailoy-web";\n\nconst runtime = await ai.startRuntime();\n\n// Using an in-memory Faiss vector store\nconst vectorstore = await ai.defineVectorStore(runtime, {\n  type: "faiss",\n  embedding: {\n    modelId: "BAAI/bge-m3",\n  },\n});\n\n// Using an external ChromaDB server\nconst vectorstore = await ai.defineVectorStore(runtime, {\n  type: "chromadb",\n  url: "http://localhost:8000", // Replace with your ChromaDB endpoint\n  collection: "my-collection",  // Your target collection name\n  embedding: {\n    modelId: "BAAI/bge-m3",\n  },\n})\n'})}),"\n","\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["When using external vector stores such as ChromaDB, make sure they're configured to use ",(0,i.jsx)(n.strong,{children:"CORS middleware"})," to allow your origin.\nFor ChromaDB, refer the ",(0,i.jsx)(n.a,{href:"https://cookbook.chromadb.dev/strategies/cors/",children:(0,i.jsx)(n.strong,{children:"CORS configuration"})}),"."]})}),"\n","\n",(0,i.jsx)(n.h3,{id:"inserting-documents",children:"Inserting Documents"}),"\n",(0,i.jsx)(n.p,{children:"Before you can retrieve documents, you must insert them into the vector store\nalong with optional metadata."}),"\n",(0,i.jsx)(n.p,{children:"Typically, you'll chunk your text into smaller pieces before insertion for\nbetter retrieval accuracy."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'const items = [\n  {\n    document:\n      "BGE M3 is an embedding model supporting dense retrieval, lexical matching and multi-vector interaction.",\n    metadata: { topic: "bge-m3" },\n  },\n  {\n    document:\n      "BM25 is a bag-of-words retrieval function that ranks a set of documents based on the query terms appearing in each document",\n    metadata: { topic: "bm25" },\n  },\n];\n\nfor (const item of items) {\n  const result = await vectorstore.insert(item);\n  console.log(result); // Example: {id: "1"}\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"retrieving-documents",children:"Retrieving Documents"}),"\n",(0,i.jsx)(n.p,{children:"You can retrieve the most relevant documents by similarity score, which is\ncomputed using vector embeddings."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'// Retrieve the top 1 item most similar to the query\nconst retrievedItems = await vectorstore.retrieve("What is BGE-M3?", 1);\nconsole.log(retrievedItems);\n// Expected: returns the document related to "bge-m3"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"clearing-the-vector-store",children:"Clearing the Vector Store"}),"\n",(0,i.jsx)(n.p,{children:"If you need to reset or remove all entries from the vector store:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"await vectorstore.clear();\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},9653:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/simple-chat-4df27ebff4bcaee797a47b03fbd6ccec.gif"},9879:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/mcp-tool-86cdb3120e3c5a76cc2798003cfa424a.gif"}}]);